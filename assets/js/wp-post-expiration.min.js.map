{"version":3,"sources":["webpack:///assets/js/wp-post-expiration.min.js","webpack:///webpack/bootstrap e70679188a85c8043761","webpack:///./source/js/wp-post-expiration.js","webpack:///./node_modules/flatpickr/dist/flatpickr.js","webpack:///./node_modules/flatpickr/dist/plugins/confirmDate/confirmDate.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0_flatpickr__","__WEBPACK_IMPORTED_MODULE_0_flatpickr___default","__WEBPACK_IMPORTED_MODULE_1_flatpickr_dist_plugins_confirmDate_confirmDate__","__WEBPACK_IMPORTED_MODULE_1_flatpickr_dist_plugins_confirmDate_confirmDate___default","Array","from","document","querySelectorAll","forEach","field","querySelector","altInput","altFormat","dateFormat","enableTime","onReady","dateObj","dateStr","instance","addEventListener","e","preventDefault","clear","close","plugins","a","global","factory","this","compareDates","date1","date2","timeless","Date","getTime","setHours","debounce","func","wait","immediate","timeout","context","args","arguments","clearTimeout","setTimeout","apply","mouseDelta","wheelDelta","deltaY","toggleClass","elem","className","bool","classList","add","remove","createElement","tag","content","window","undefined","textContent","clearNode","node","firstChild","removeChild","findParent","condition","parentNode","createNumberInput","inputClassName","wrapper","numInput","arrowUp","arrowDown","type","pattern","appendChild","FlatpickrInstance","element","instanceConfig","setupHelperFunctions","self","utils","getDaysInMonth","month","yr","currentMonth","currentYear","l10n","daysInMonth","bindToInstance","fn","bind","updateTime","config","noCalendar","selectedDates","length","setDate","defaultHour","defaultMinute","defaultSeconds","setHoursFromInputs","updateValue","timeWrapper","minDateHasTime","target","ampm2military","hour","amPM","int","military2ampm","hourElement","minuteElement","hours","parseInt","slice","minutes","seconds","secondElement","minDate","latestSelectedDateObj","Math","max","getHours","getMinutes","maxDate","maxDateHasTime","min","setHoursFromDate","date","getSeconds","isMobile","pad","time_24hr","onYearInput","event","year","delta","toString","key","currentYearElement","blur","test","changeYear","handler","ev","el","_handlers","push","onClick","evt","which","triggerChange","triggerEvent","bindEvents","wrap","setupMobile","debouncedResize","onResize","_debouncedChange","mode","daysContainer","onMouseOver","body","onKeyDown","static","_input","inline","ontouchstart","documentClick","clickOpens","open","monthNav","onMonthNavScroll","onMonthNavClick","selectDate","animate","animateDays","animateMonths","timeContainer","selText","select","timeIncrement","processPostDayAnimation","_animationLoop","f","childNodes","animationName","lastChild","days","navigationCurrentMonth","nav","nextSibling","previousSibling","oldCurMonth","jumpToDate","jumpDate","jumpTo","parseDate","now","getFullYear","getMonth","console","error","stack","warn","redraw","indexOf","incrementNumInput","contains","inputElem","input","createEvent","dispatchEvent","build","fragment","createDocumentFragment","calendarContainer","tabIndex","buildMonthNav","innerContainer","weekNumbers","_a","buildWeeks","weekWrapper","rContainer","buildWeekdays","buildDays","buildTime","customAppend","appendTo","nodeType","insertBefore","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","getDate","$i","setAttribute","formatDate","ariaDateFormat","todayDateElem","isDateSelected","selectedDateElem","minRangeDate","maxRangeDate","isDateInRange","insertAdjacentHTML","getWeek","focusOnDay","currentIndex","offset","newIndex","targetNode","focus","changeMonth","afterDayAnim","firstOfMonth","getDay","firstDayOfWeek","isRangeMode","prevMonthDays","dayIndex","dayNum","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","dayContainer","monthNavFragment","prevMonthNav","innerHTML","prevArrow","currentMonthElement","title","scrollTitle","yearInput","disabled","nextMonthNav","nextArrow","__hidePrevMonthArrow","set","style","display","__hideNextMonthArrow","separator","hourInput","minuteInput","step","hourIncrement","minuteIncrement","enableSeconds","secondInput","toggleTitle","weekdayContainer","weekdays","shorthand","splice","concat","join","weekAbbreviation","is_offset","from_keyboard","cloneNode","monthToStr","shorthandCurrentMonth","activeElement","index_1","triggerChangeEvent","mobileInput","showTimeInput","isOpen","destroy","h","removeEventListener","_type","removeAttribute","k","_","isCalendarElem","isCalendarElement","isInput","path","relatedTarget","ignoredFocusElements","newYear","newYearNum","isNewYear","dateToCheck","enable","disable","array","parsed","to","calendarElem","allowInput","allowKeydown","allowInlineKeydown","isTimeObj","delta_1","ctrlKey","hoverDate","initialDate","rangeStartDate","rangeEndDate","containsDisabled","t","duration","DAY","timestamp","outOfRange","dayElem","positionCalendar","positionElement","click","minMaxDateSetter","inverseDateObj","filter","parseConfig","boolOpts","hooks","__assign","flatpickr","defaultConfig","userConfig","JSON","parse","stringify","dataset","formats$$1","_enable","dates","parseDateRules","_disable","_minDate","_maxDate","assign","arrayify","map","pluginConf","disableMobile","navigator","userAgent","setupLocale","locale","l10ns","default","_positionElement","calendarHeight","offsetHeight","calendarWidth","offsetWidth","configPos","position","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","bottom","showOnTop","top","pageYOffset","left","pageXOffset","right","rightMost","stopPropagation","isSelectable","day","selectedDate","shouldChangeMonth","selectedIndex","sort","b","closeOnSelect","single","range","option","setSelectedDate","inputDate","format","split","rangeSeparator","arr","rule","x","setupDates","preloadedDate","defaultDate","_showTimeInput","frmt","formats","givenFormat","parsedDate","date_orig","toFixed","datestr","String","trim","matched","ops","matchIndex","regexStr","token","isBackSlash","escaped","tokenRegex","match","RegExp","exec","revFormat","val","info","setupInputs","nodeName","altInputClass","placeholder","required","inputType","getAttribute","mobileFormatStr","defaultValue","toggle","data","initEvent","joinChar","conjunction","dObj","isYear","isPrevMonth","isNextMonth","isKeyDown","Number","curValue","newValue","isHourElem","isMinuteElem","abs","_bind","_setHoursFromDate","_createElement","width","_flatpickr","nodeList","nodes","instances","monthNumber","months","givenDate","onejan","ceil","defaults","onChange","onClose","onDayCreate","onDestroy","onMonthChange","onOpen","onParseConfig","onValueUpdate","onYearChange","english","longhand","ordinal","nth","number","obj","do_nothing","D","F","monthName","setMonth","G","parseFloat","H","J","K","M","shortMonth","S","setSeconds","U","unixSeconds","W","weekNum","weekNumber","Y","setFullYear","Z","ISODate","setMinutes","j","w","y","toISOString","options","substring","HTMLElement","HTMLCollection","NodeList","selector","en","localize","setDefaults","jQuery","fp_incr","confirmDatePlugin","pluginConfig","confirmContainer","fp","__","___","showAlways","theme","confirmText","confirmIcon","showCondition"],"mappings":"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","file":"assets/js/wp-post-expiration.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1);\n__webpack_require__(2);\n__webpack_require__(5);\nmodule.exports = __webpack_require__(6);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_flatpickr__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_flatpickr___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_flatpickr__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_flatpickr_dist_plugins_confirmDate_confirmDate__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_flatpickr_dist_plugins_confirmDate_confirmDate___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_flatpickr_dist_plugins_confirmDate_confirmDate__);\n\n\n\nArray.from(document.querySelectorAll('.wp-post-expiration')).forEach(function (field) {\n    __WEBPACK_IMPORTED_MODULE_0_flatpickr___default()(field.querySelector('.js-flatpickr'), {\n        altInput: true,\n        altFormat: 'M j, Y h:i K', // https://chmln.github.io/flatpickr/formatting/\n        dateFormat: 'U',\n        enableTime: true,\n        onReady: function onReady(dateObj, dateStr, instance) {\n            var clearBtn = field.querySelector('.js-flatpickr-reset');\n            clearBtn.addEventListener('click', function (e) {\n                e.preventDefault();\n                instance.clear();\n                instance.close();\n            });\n        },\n        plugins: [new __WEBPACK_IMPORTED_MODULE_1_flatpickr_dist_plugins_confirmDate_confirmDate___default.a({})]\n    });\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* flatpickr v3.1.4, @license MIT */\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.flatpickr = factory());\n}(this, (function () { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\nfunction compareDates(date1, date2, timeless) {\r\n    if (timeless !== false) {\r\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\r\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\r\n    }\r\n    return date1.getTime() - date2.getTime();\r\n}\r\nvar monthToStr = function (monthNumber, shorthand, locale) { return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber]; };\r\nvar getWeek = function (givenDate) {\r\n    var onejan = new Date(givenDate.getFullYear(), 0, 1);\r\n    return Math.ceil(((givenDate.getTime() - onejan.getTime()) / 86400000 +\r\n        onejan.getDay() +\r\n        1) /\r\n        7);\r\n};\r\nvar duration = {\r\n    DAY: 86400000,\r\n};\n\nvar defaults = {\r\n    _disable: [],\r\n    _enable: [],\r\n    allowInput: false,\r\n    altFormat: \"F j, Y\",\r\n    altInput: false,\r\n    altInputClass: \"form-control input\",\r\n    animate: window && window.navigator.userAgent.indexOf(\"MSIE\") === -1,\r\n    ariaDateFormat: \"F j, Y\",\r\n    clickOpens: true,\r\n    closeOnSelect: true,\r\n    conjunction: \", \",\r\n    dateFormat: \"Y-m-d\",\r\n    defaultHour: 12,\r\n    defaultMinute: 0,\r\n    defaultSeconds: 0,\r\n    disable: [],\r\n    disableMobile: false,\r\n    enable: [],\r\n    enableSeconds: false,\r\n    enableTime: false,\r\n    getWeek: getWeek,\r\n    hourIncrement: 1,\r\n    ignoredFocusElements: [],\r\n    inline: false,\r\n    locale: \"default\",\r\n    minuteIncrement: 5,\r\n    mode: \"single\",\r\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\r\n    noCalendar: false,\r\n    onChange: [],\r\n    onClose: [],\r\n    onDayCreate: [],\r\n    onDestroy: [],\r\n    onKeyDown: [],\r\n    onMonthChange: [],\r\n    onOpen: [],\r\n    onParseConfig: [],\r\n    onReady: [],\r\n    onValueUpdate: [],\r\n    onYearChange: [],\r\n    plugins: [],\r\n    position: \"auto\",\r\n    positionElement: undefined,\r\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\r\n    shorthandCurrentMonth: false,\r\n    static: false,\r\n    time_24hr: false,\r\n    weekNumbers: false,\r\n    wrap: false,\r\n};\n\nvar english = {\r\n    weekdays: {\r\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n        longhand: [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n        ],\r\n    },\r\n    months: {\r\n        shorthand: [\r\n            \"Jan\",\r\n            \"Feb\",\r\n            \"Mar\",\r\n            \"Apr\",\r\n            \"May\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Aug\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\",\r\n        ],\r\n        longhand: [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n        ],\r\n    },\r\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n    firstDayOfWeek: 0,\r\n    ordinal: function (nth) {\r\n        var s = nth % 100;\r\n        if (s > 3 && s < 21)\r\n            return \"th\";\r\n        switch (s % 10) {\r\n            case 1:\r\n                return \"st\";\r\n            case 2:\r\n                return \"nd\";\r\n            case 3:\r\n                return \"rd\";\r\n            default:\r\n                return \"th\";\r\n        }\r\n    },\r\n    rangeSeparator: \" to \",\r\n    weekAbbreviation: \"Wk\",\r\n    scrollTitle: \"Scroll to increment\",\r\n    toggleTitle: \"Click to toggle\",\r\n    amPM: [\"AM\", \"PM\"],\r\n};\n\nvar pad = function (number) { return (\"0\" + number).slice(-2); };\r\nvar int = function (bool) { return (bool === true ? 1 : 0); };\r\nfunction debounce(func, wait, immediate) {\r\n    if (immediate === void 0) { immediate = false; }\r\n    var timeout;\r\n    return function () {\r\n        var context = this, args = arguments;\r\n        timeout !== null && clearTimeout(timeout);\r\n        timeout = setTimeout(function () {\r\n            timeout = null;\r\n            if (!immediate)\r\n                func.apply(context, args);\r\n        }, wait);\r\n        if (immediate && !timeout)\r\n            func.apply(context, args);\r\n    };\r\n}\r\nvar arrayify = function (obj) {\r\n    return obj instanceof Array ? obj : [obj];\r\n};\r\nfunction mouseDelta(e) {\r\n    var delta = e.wheelDelta || -e.deltaY;\r\n    return delta >= 0 ? 1 : -1;\r\n}\n\nfunction toggleClass(elem, className, bool) {\r\n    if (bool === true)\r\n        return elem.classList.add(className);\r\n    elem.classList.remove(className);\r\n}\r\nfunction createElement(tag, className, content) {\r\n    var e = window.document.createElement(tag);\r\n    className = className || \"\";\r\n    content = content || \"\";\r\n    e.className = className;\r\n    if (content !== undefined)\r\n        e.textContent = content;\r\n    return e;\r\n}\r\nfunction clearNode(node) {\r\n    while (node.firstChild)\r\n        node.removeChild(node.firstChild);\r\n}\r\nfunction findParent(node, condition) {\r\n    if (condition(node))\r\n        return node;\r\n    else if (node.parentNode)\r\n        return findParent(node.parentNode, condition);\r\n    return undefined;\r\n}\r\nfunction createNumberInput(inputClassName) {\r\n    var wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\r\n    numInput.type = \"text\";\r\n    numInput.pattern = \"\\\\d*\";\r\n    wrapper.appendChild(numInput);\r\n    wrapper.appendChild(arrowUp);\r\n    wrapper.appendChild(arrowDown);\r\n    return wrapper;\r\n}\n\nvar do_nothing = function () { return undefined; };\r\nvar revFormat = {\r\n    D: do_nothing,\r\n    F: function (dateObj, monthName, locale) {\r\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\r\n    },\r\n    G: function (dateObj, hour) {\r\n        dateObj.setHours(parseFloat(hour));\r\n    },\r\n    H: function (dateObj, hour) {\r\n        dateObj.setHours(parseFloat(hour));\r\n    },\r\n    J: function (dateObj, day) {\r\n        dateObj.setDate(parseFloat(day));\r\n    },\r\n    K: function (dateObj, amPM) {\r\n        dateObj.setHours(dateObj.getHours() % 12 + 12 * int(/pm/i.test(amPM)));\r\n    },\r\n    M: function (dateObj, shortMonth, locale) {\r\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\r\n    },\r\n    S: function (dateObj, seconds) {\r\n        dateObj.setSeconds(parseFloat(seconds));\r\n    },\r\n    U: function (_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },\r\n    W: function (dateObj, weekNum) {\r\n        var weekNumber = parseInt(weekNum);\r\n        return new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\r\n    },\r\n    Y: function (dateObj, year) {\r\n        dateObj.setFullYear(parseFloat(year));\r\n    },\r\n    Z: function (_, ISODate) { return new Date(ISODate); },\r\n    d: function (dateObj, day) {\r\n        dateObj.setDate(parseFloat(day));\r\n    },\r\n    h: function (dateObj, hour) {\r\n        dateObj.setHours(parseFloat(hour));\r\n    },\r\n    i: function (dateObj, minutes) {\r\n        dateObj.setMinutes(parseFloat(minutes));\r\n    },\r\n    j: function (dateObj, day) {\r\n        dateObj.setDate(parseFloat(day));\r\n    },\r\n    l: do_nothing,\r\n    m: function (dateObj, month) {\r\n        dateObj.setMonth(parseFloat(month) - 1);\r\n    },\r\n    n: function (dateObj, month) {\r\n        dateObj.setMonth(parseFloat(month) - 1);\r\n    },\r\n    s: function (dateObj, seconds) {\r\n        dateObj.setSeconds(parseFloat(seconds));\r\n    },\r\n    w: do_nothing,\r\n    y: function (dateObj, year) {\r\n        dateObj.setFullYear(2000 + parseFloat(year));\r\n    },\r\n};\r\nvar tokenRegex = {\r\n    D: \"(\\\\w+)\",\r\n    F: \"(\\\\w+)\",\r\n    G: \"(\\\\d\\\\d|\\\\d)\",\r\n    H: \"(\\\\d\\\\d|\\\\d)\",\r\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\r\n    K: \"(am|AM|Am|aM|pm|PM|Pm|pM)\",\r\n    M: \"(\\\\w+)\",\r\n    S: \"(\\\\d\\\\d|\\\\d)\",\r\n    U: \"(.+)\",\r\n    W: \"(\\\\d\\\\d|\\\\d)\",\r\n    Y: \"(\\\\d{4})\",\r\n    Z: \"(.+)\",\r\n    d: \"(\\\\d\\\\d|\\\\d)\",\r\n    h: \"(\\\\d\\\\d|\\\\d)\",\r\n    i: \"(\\\\d\\\\d|\\\\d)\",\r\n    j: \"(\\\\d\\\\d|\\\\d)\",\r\n    l: \"(\\\\w+)\",\r\n    m: \"(\\\\d\\\\d|\\\\d)\",\r\n    n: \"(\\\\d\\\\d|\\\\d)\",\r\n    s: \"(\\\\d\\\\d|\\\\d)\",\r\n    w: \"(\\\\d\\\\d|\\\\d)\",\r\n    y: \"(\\\\d{2})\",\r\n};\r\nvar formats = {\r\n    Z: function (date) { return date.toISOString(); },\r\n    D: function (date, locale, options) {\r\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\r\n    },\r\n    F: function (date, locale, options) {\r\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\r\n    },\r\n    G: function (date, locale, options) {\r\n        return pad(formats.h(date, locale, options));\r\n    },\r\n    H: function (date) { return pad(date.getHours()); },\r\n    J: function (date, locale) {\r\n        return locale.ordinal !== undefined\r\n            ? date.getDate() + locale.ordinal(date.getDate())\r\n            : date.getDate();\r\n    },\r\n    K: function (date) { return (date.getHours() > 11 ? \"PM\" : \"AM\"); },\r\n    M: function (date, locale) {\r\n        return monthToStr(date.getMonth(), true, locale);\r\n    },\r\n    S: function (date) { return pad(date.getSeconds()); },\r\n    U: function (date) { return date.getTime() / 1000; },\r\n    W: function (date, _, options) {\r\n        return options.getWeek(date);\r\n    },\r\n    Y: function (date) { return date.getFullYear(); },\r\n    d: function (date) { return pad(date.getDate()); },\r\n    h: function (date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\r\n    i: function (date) { return pad(date.getMinutes()); },\r\n    j: function (date) { return date.getDate(); },\r\n    l: function (date, locale) {\r\n        return locale.weekdays.longhand[date.getDay()];\r\n    },\r\n    m: function (date) { return pad(date.getMonth() + 1); },\r\n    n: function (date) { return date.getMonth() + 1; },\r\n    s: function (date) { return date.getSeconds(); },\r\n    w: function (date) { return date.getDay(); },\r\n    y: function (date) { return String(date.getFullYear()).substring(2); },\r\n};\n\nfunction FlatpickrInstance(element, instanceConfig) {\r\n    var self = {};\r\n    self.parseDate = parseDate;\r\n    self.formatDate = formatDate;\r\n    self._animationLoop = [];\r\n    self._handlers = [];\r\n    self._bind = bind;\r\n    self._setHoursFromDate = setHoursFromDate;\r\n    self.changeMonth = changeMonth;\r\n    self.changeYear = changeYear;\r\n    self.clear = clear;\r\n    self.close = close;\r\n    self._createElement = createElement;\r\n    self.destroy = destroy;\r\n    self.isEnabled = isEnabled;\r\n    self.jumpToDate = jumpToDate;\r\n    self.open = open;\r\n    self.redraw = redraw;\r\n    self.set = set;\r\n    self.setDate = setDate;\r\n    self.toggle = toggle;\r\n    function setupHelperFunctions() {\r\n        self.utils = {\r\n            getDaysInMonth: function (month, yr) {\r\n                if (month === void 0) { month = self.currentMonth; }\r\n                if (yr === void 0) { yr = self.currentYear; }\r\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\r\n                    return 29;\r\n                return self.l10n.daysInMonth[month];\r\n            },\r\n        };\r\n    }\r\n    function init() {\r\n        self.element = self.input = element;\r\n        self.isOpen = false;\r\n        parseConfig();\r\n        setupLocale();\r\n        setupInputs();\r\n        setupDates();\r\n        setupHelperFunctions();\r\n        if (!self.isMobile)\r\n            build();\r\n        bindEvents();\r\n        if (self.selectedDates.length || self.config.noCalendar) {\r\n            if (self.config.enableTime) {\r\n                setHoursFromDate(self.config.noCalendar\r\n                    ? self.latestSelectedDateObj || self.config.minDate\r\n                    : undefined);\r\n            }\r\n            updateValue(false);\r\n        }\r\n        self.showTimeInput =\r\n            self.selectedDates.length > 0 || self.config.noCalendar;\r\n        if (self.weekWrapper !== undefined && self.daysContainer !== undefined) {\r\n            self.calendarContainer.style.width =\r\n                self.daysContainer.offsetWidth + self.weekWrapper.offsetWidth + \"px\";\r\n        }\r\n        if (!self.isMobile)\r\n            positionCalendar();\r\n        triggerEvent(\"onReady\");\r\n    }\r\n    function bindToInstance(fn) {\r\n        return fn.bind(self);\r\n    }\r\n    function updateTime(e) {\r\n        if (self.config.noCalendar && !self.selectedDates.length) {\r\n            self.setDate(new Date().setHours(self.config.defaultHour, self.config.defaultMinute, self.config.defaultSeconds), false);\r\n            setHoursFromInputs();\r\n            updateValue();\r\n        }\r\n        timeWrapper(e);\r\n        if (self.selectedDates.length === 0)\r\n            return;\r\n        if (!self.minDateHasTime ||\r\n            e.type !== \"input\" ||\r\n            e.target.value.length >= 2) {\r\n            setHoursFromInputs();\r\n            updateValue();\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                setHoursFromInputs();\r\n                updateValue();\r\n            }, 1000);\r\n        }\r\n    }\r\n    function ampm2military(hour, amPM) {\r\n        return hour % 12 + 12 * int(amPM === \"PM\");\r\n    }\r\n    function military2ampm(hour) {\r\n        switch (hour % 24) {\r\n            case 0:\r\n            case 12:\r\n                return 12;\r\n            default:\r\n                return hour % 12;\r\n        }\r\n    }\r\n    function setHoursFromInputs() {\r\n        if (self.hourElement === undefined || self.minuteElement === undefined)\r\n            return;\r\n        var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\r\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\r\n            : 0;\r\n        if (self.amPM !== undefined)\r\n            hours = ampm2military(hours, self.amPM.textContent);\r\n        if (self.config.minDate &&\r\n            self.minDateHasTime &&\r\n            self.latestSelectedDateObj &&\r\n            compareDates(self.latestSelectedDateObj, self.config.minDate) === 0) {\r\n            hours = Math.max(hours, self.config.minDate.getHours());\r\n            if (hours === self.config.minDate.getHours())\r\n                minutes = Math.max(minutes, self.config.minDate.getMinutes());\r\n        }\r\n        if (self.config.maxDate &&\r\n            self.maxDateHasTime &&\r\n            self.latestSelectedDateObj &&\r\n            compareDates(self.latestSelectedDateObj, self.config.maxDate) === 0) {\r\n            hours = Math.min(hours, self.config.maxDate.getHours());\r\n            if (hours === self.config.maxDate.getHours())\r\n                minutes = Math.min(minutes, self.config.maxDate.getMinutes());\r\n        }\r\n        setHours(hours, minutes, seconds);\r\n    }\r\n    function setHoursFromDate(dateObj) {\r\n        var date = dateObj || self.latestSelectedDateObj;\r\n        if (date)\r\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\r\n    }\r\n    function setHours(hours, minutes, seconds) {\r\n        if (self.latestSelectedDateObj !== undefined) {\r\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\r\n        }\r\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\r\n            return;\r\n        self.hourElement.value = pad(!self.config.time_24hr\r\n            ? (12 + hours) % 12 + 12 * int(hours % 12 === 0)\r\n            : hours);\r\n        self.minuteElement.value = pad(minutes);\r\n        if (self.amPM !== undefined)\r\n            self.amPM.textContent = hours >= 12 ? \"PM\" : \"AM\";\r\n        if (self.secondElement !== undefined)\r\n            self.secondElement.value = pad(seconds);\r\n    }\r\n    function onYearInput(event) {\r\n        var year = parseInt(event.target.value) + (event.delta || 0);\r\n        if (year.toString().length === 4 || event.key === \"Enter\") {\r\n            self.currentYearElement.blur();\r\n            if (!/[^\\d]/.test(year.toString()))\r\n                changeYear(year);\r\n        }\r\n    }\r\n    function bind(element, event, handler) {\r\n        if (event instanceof Array)\r\n            return event.forEach(function (ev) { return bind(element, ev, handler); });\r\n        if (element instanceof Array)\r\n            return element.forEach(function (el) { return bind(el, event, handler); });\r\n        element.addEventListener(event, handler);\r\n        self._handlers.push({ element: element, event: event, handler: handler });\r\n    }\r\n    function onClick(handler) {\r\n        return function (evt) { return evt.which === 1 && handler(evt); };\r\n    }\r\n    function triggerChange() {\r\n        triggerEvent(\"onChange\");\r\n    }\r\n    function bindEvents() {\r\n        if (self.config.wrap) {\r\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach(function (evt) {\r\n                Array.prototype.forEach.call(self.element.querySelectorAll(\"[data-\" + evt + \"]\"), function (el) {\r\n                    return bind(el, \"click\", self[evt]);\r\n                });\r\n            });\r\n        }\r\n        if (self.isMobile) {\r\n            setupMobile();\r\n            return;\r\n        }\r\n        var debouncedResize = debounce(onResize, 50);\r\n        self._debouncedChange = debounce(triggerChange, 300);\r\n        if (self.config.mode === \"range\" && self.daysContainer)\r\n            bind(self.daysContainer, \"mouseover\", function (e) {\r\n                return onMouseOver(e.target);\r\n            });\r\n        bind(window.document.body, \"keydown\", onKeyDown);\r\n        if (!self.config.static)\r\n            bind(self._input, \"keydown\", onKeyDown);\r\n        if (!self.config.inline && !self.config.static)\r\n            bind(window, \"resize\", debouncedResize);\r\n        if (window.ontouchstart !== undefined)\r\n            bind(window.document.body, \"touchstart\", documentClick);\r\n        bind(window.document.body, \"mousedown\", onClick(documentClick));\r\n        bind(self._input, \"blur\", documentClick);\r\n        if (self.config.clickOpens === true) {\r\n            bind(self._input, \"focus\", self.open);\r\n            bind(self._input, \"mousedown\", onClick(self.open));\r\n        }\r\n        if (self.daysContainer !== undefined) {\r\n            self.monthNav.addEventListener(\"wheel\", function (e) { return e.preventDefault(); });\r\n            bind(self.monthNav, \"wheel\", debounce(onMonthNavScroll, 10));\r\n            bind(self.monthNav, \"mousedown\", onClick(onMonthNavClick));\r\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\r\n            bind(self.daysContainer, \"mousedown\", onClick(selectDate));\r\n            if (self.config.animate) {\r\n                bind(self.daysContainer, [\"webkitAnimationEnd\", \"animationend\"], animateDays);\r\n                bind(self.monthNav, [\"webkitAnimationEnd\", \"animationend\"], animateMonths);\r\n            }\r\n        }\r\n        if (self.timeContainer !== undefined &&\r\n            self.minuteElement !== undefined &&\r\n            self.hourElement !== undefined) {\r\n            var selText = function (e) {\r\n                return e.target.select();\r\n            };\r\n            bind(self.timeContainer, [\"wheel\", \"input\", \"increment\"], updateTime);\r\n            bind(self.timeContainer, \"mousedown\", onClick(timeIncrement));\r\n            bind(self.timeContainer, [\"wheel\", \"increment\"], self._debouncedChange);\r\n            bind(self.timeContainer, \"input\", triggerChange);\r\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\r\n            if (self.secondElement !== undefined)\r\n                bind(self.secondElement, \"focus\", function () { return self.secondElement && self.secondElement.select(); });\r\n            if (self.amPM !== undefined) {\r\n                bind(self.amPM, \"mousedown\", onClick(function (e) {\r\n                    updateTime(e);\r\n                    triggerChange();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    function processPostDayAnimation() {\r\n        self._animationLoop.forEach(function (f) { return f(); });\r\n        self._animationLoop = [];\r\n    }\r\n    function animateDays(e) {\r\n        if (self.daysContainer && self.daysContainer.childNodes.length > 1) {\r\n            switch (e.animationName) {\r\n                case \"fpSlideLeft\":\r\n                    self.daysContainer.lastChild &&\r\n                        self.daysContainer.lastChild.classList.remove(\"slideLeftNew\");\r\n                    self.daysContainer.removeChild(self.daysContainer\r\n                        .firstChild);\r\n                    self.days = self.daysContainer.firstChild;\r\n                    processPostDayAnimation();\r\n                    break;\r\n                case \"fpSlideRight\":\r\n                    self.daysContainer.firstChild &&\r\n                        self.daysContainer.firstChild.classList.remove(\"slideRightNew\");\r\n                    self.daysContainer.removeChild(self.daysContainer\r\n                        .lastChild);\r\n                    self.days = self.daysContainer.firstChild;\r\n                    processPostDayAnimation();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    function animateMonths(e) {\r\n        switch (e.animationName) {\r\n            case \"fpSlideLeftNew\":\r\n            case \"fpSlideRightNew\":\r\n                self.navigationCurrentMonth.classList.remove(\"slideLeftNew\");\r\n                self.navigationCurrentMonth.classList.remove(\"slideRightNew\");\r\n                var nav = self.navigationCurrentMonth;\r\n                while (nav.nextSibling &&\r\n                    /curr/.test(nav.nextSibling.className))\r\n                    self.monthNav.removeChild(nav.nextSibling);\r\n                while (nav.previousSibling &&\r\n                    /curr/.test(nav.previousSibling.className))\r\n                    self.monthNav.removeChild(nav.previousSibling);\r\n                self.oldCurMonth = undefined;\r\n                break;\r\n        }\r\n    }\r\n    function jumpToDate(jumpDate) {\r\n        var jumpTo = jumpDate !== undefined\r\n            ? parseDate(jumpDate)\r\n            : self.latestSelectedDateObj ||\r\n                (self.config.minDate && self.config.minDate > self.now\r\n                    ? self.config.minDate\r\n                    : self.config.maxDate && self.config.maxDate < self.now\r\n                        ? self.config.maxDate\r\n                        : self.now);\r\n        try {\r\n            if (jumpTo !== undefined) {\r\n                self.currentYear = jumpTo.getFullYear();\r\n                self.currentMonth = jumpTo.getMonth();\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(e.stack);\r\n            console.warn(\"Invalid date supplied: \" + jumpTo);\r\n        }\r\n        self.redraw();\r\n    }\r\n    function timeIncrement(e) {\r\n        if (~e.target.className.indexOf(\"arrow\"))\r\n            incrementNumInput(e, e.target.classList.contains(\"arrowUp\") ? 1 : -1);\r\n    }\r\n    function incrementNumInput(e, delta, inputElem) {\r\n        var target = e && e.target;\r\n        var input = inputElem ||\r\n            (target && target.parentNode && target.parentNode.firstChild);\r\n        var event = createEvent(\"increment\");\r\n        event.delta = delta;\r\n        input && input.dispatchEvent(event);\r\n    }\r\n    function build() {\r\n        var fragment = window.document.createDocumentFragment();\r\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\r\n        self.calendarContainer.tabIndex = -1;\r\n        if (!self.config.noCalendar) {\r\n            fragment.appendChild(buildMonthNav());\r\n            self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\r\n            if (self.config.weekNumbers) {\r\n                var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\r\n                self.innerContainer.appendChild(weekWrapper);\r\n                self.weekNumbers = weekNumbers;\r\n                self.weekWrapper = weekWrapper;\r\n            }\r\n            self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\r\n            self.rContainer.appendChild(buildWeekdays());\r\n            if (!self.daysContainer) {\r\n                self.daysContainer = createElement(\"div\", \"flatpickr-days\");\r\n                self.daysContainer.tabIndex = -1;\r\n            }\r\n            buildDays();\r\n            self.rContainer.appendChild(self.daysContainer);\r\n            self.innerContainer.appendChild(self.rContainer);\r\n            fragment.appendChild(self.innerContainer);\r\n        }\r\n        if (self.config.enableTime) {\r\n            fragment.appendChild(buildTime());\r\n        }\r\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\r\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate);\r\n        self.calendarContainer.appendChild(fragment);\r\n        var customAppend = self.config.appendTo !== undefined && self.config.appendTo.nodeType;\r\n        if (self.config.inline || self.config.static) {\r\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\r\n            if (self.config.inline && !customAppend && self.element.parentNode) {\r\n                self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\r\n            }\r\n            if (self.config.static) {\r\n                var wrapper = createElement(\"div\", \"flatpickr-wrapper\");\r\n                if (self.element.parentNode)\r\n                    self.element.parentNode.insertBefore(wrapper, self.element);\r\n                wrapper.appendChild(self.element);\r\n                if (self.altInput)\r\n                    wrapper.appendChild(self.altInput);\r\n                wrapper.appendChild(self.calendarContainer);\r\n            }\r\n        }\r\n        if (!self.config.static && !self.config.inline)\r\n            (self.config.appendTo !== undefined\r\n                ? self.config.appendTo\r\n                : window.document.body).appendChild(self.calendarContainer);\r\n    }\r\n    function createDay(className, date, dayNumber, i) {\r\n        var dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\r\n        dayElement.dateObj = date;\r\n        dayElement.$i = i;\r\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\r\n        if (compareDates(date, self.now) === 0) {\r\n            self.todayDateElem = dayElement;\r\n            dayElement.classList.add(\"today\");\r\n        }\r\n        if (dateIsEnabled) {\r\n            dayElement.tabIndex = -1;\r\n            if (isDateSelected(date)) {\r\n                dayElement.classList.add(\"selected\");\r\n                self.selectedDateElem = dayElement;\r\n                if (self.config.mode === \"range\") {\r\n                    toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\r\n                        compareDates(date, self.selectedDates[0]) === 0);\r\n                    toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\r\n                        compareDates(date, self.selectedDates[1]) === 0);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            dayElement.classList.add(\"disabled\");\r\n            if (self.selectedDates[0] &&\r\n                self.minRangeDate &&\r\n                date > self.minRangeDate &&\r\n                date < self.selectedDates[0])\r\n                self.minRangeDate = date;\r\n            else if (self.selectedDates[0] &&\r\n                self.maxRangeDate &&\r\n                date < self.maxRangeDate &&\r\n                date > self.selectedDates[0])\r\n                self.maxRangeDate = date;\r\n        }\r\n        if (self.config.mode === \"range\") {\r\n            if (isDateInRange(date) && !isDateSelected(date))\r\n                dayElement.classList.add(\"inRange\");\r\n            if (self.selectedDates.length === 1 &&\r\n                self.minRangeDate !== undefined &&\r\n                self.maxRangeDate !== undefined &&\r\n                (date < self.minRangeDate || date > self.maxRangeDate))\r\n                dayElement.classList.add(\"notAllowed\");\r\n        }\r\n        if (self.weekNumbers &&\r\n            className !== \"prevMonthDay\" &&\r\n            dayNumber % 7 === 1) {\r\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='disabled flatpickr-day'>\" +\r\n                self.config.getWeek(date) +\r\n                \"</span>\");\r\n        }\r\n        triggerEvent(\"onDayCreate\", dayElement);\r\n        return dayElement;\r\n    }\r\n    function focusOnDay(currentIndex, offset) {\r\n        var newIndex = currentIndex + offset || 0, targetNode = (currentIndex !== undefined\r\n            ? self.days.childNodes[newIndex]\r\n            : self.selectedDateElem ||\r\n                self.todayDateElem ||\r\n                self.days.childNodes[0]);\r\n        var focus = function () {\r\n            targetNode = targetNode || self.days.childNodes[newIndex];\r\n            targetNode.focus();\r\n            if (self.config.mode === \"range\")\r\n                onMouseOver(targetNode);\r\n        };\r\n        if (targetNode === undefined && offset !== 0) {\r\n            if (offset > 0) {\r\n                self.changeMonth(1, true, undefined, true);\r\n                newIndex = newIndex % 42;\r\n            }\r\n            else if (offset < 0) {\r\n                self.changeMonth(-1, true, undefined, true);\r\n                newIndex += 42;\r\n            }\r\n            return afterDayAnim(focus);\r\n        }\r\n        focus();\r\n    }\r\n    function afterDayAnim(fn) {\r\n        self.config.animate === true ? self._animationLoop.push(fn) : fn();\r\n    }\r\n    function buildDays(delta) {\r\n        if (self.daysContainer === undefined) {\r\n            return;\r\n        }\r\n        var firstOfMonth = (new Date(self.currentYear, self.currentMonth, 1).getDay() -\r\n            self.l10n.firstDayOfWeek +\r\n            7) %\r\n            7, isRangeMode = self.config.mode === \"range\";\r\n        var prevMonthDays = self.utils.getDaysInMonth((self.currentMonth - 1 + 12) % 12);\r\n        var daysInMonth = self.utils.getDaysInMonth(), days = window.document.createDocumentFragment();\r\n        var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\r\n        if (self.weekNumbers && self.weekNumbers.firstChild)\r\n            self.weekNumbers.textContent = \"\";\r\n        if (isRangeMode) {\r\n            self.minRangeDate = new Date(self.currentYear, self.currentMonth - 1, dayNumber);\r\n            self.maxRangeDate = new Date(self.currentYear, self.currentMonth + 1, (42 - firstOfMonth) % daysInMonth);\r\n        }\r\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\r\n            days.appendChild(createDay(\"prevMonthDay\", new Date(self.currentYear, self.currentMonth - 1, dayNumber), dayNumber, dayIndex));\r\n        }\r\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\r\n            days.appendChild(createDay(\"\", new Date(self.currentYear, self.currentMonth, dayNumber), dayNumber, dayIndex));\r\n        }\r\n        for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth; dayNum++, dayIndex++) {\r\n            days.appendChild(createDay(\"nextMonthDay\", new Date(self.currentYear, self.currentMonth + 1, dayNum % daysInMonth), dayNum, dayIndex));\r\n        }\r\n        if (isRangeMode && self.selectedDates.length === 1 && days.childNodes[0]) {\r\n            self._hidePrevMonthArrow =\r\n                self._hidePrevMonthArrow ||\r\n                    (!!self.minRangeDate &&\r\n                        self.minRangeDate > days.childNodes[0].dateObj);\r\n            self._hideNextMonthArrow =\r\n                self._hideNextMonthArrow ||\r\n                    (!!self.maxRangeDate &&\r\n                        self.maxRangeDate <\r\n                            new Date(self.currentYear, self.currentMonth + 1, 1));\r\n        }\r\n        else\r\n            updateNavigationCurrentMonth();\r\n        var dayContainer = createElement(\"div\", \"dayContainer\");\r\n        dayContainer.appendChild(days);\r\n        if (!self.config.animate || delta === undefined)\r\n            clearNode(self.daysContainer);\r\n        else {\r\n            while (self.daysContainer.childNodes.length > 1)\r\n                self.daysContainer.removeChild(self.daysContainer.firstChild);\r\n        }\r\n        if (delta && delta >= 0)\r\n            self.daysContainer.appendChild(dayContainer);\r\n        else\r\n            self.daysContainer.insertBefore(dayContainer, self.daysContainer.firstChild);\r\n        self.days = self.daysContainer.childNodes[0];\r\n    }\r\n    function buildMonthNav() {\r\n        var monthNavFragment = window.document.createDocumentFragment();\r\n        self.monthNav = createElement(\"div\", \"flatpickr-month\");\r\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\r\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\r\n        self.currentMonthElement = createElement(\"span\", \"cur-month\");\r\n        self.currentMonthElement.title = self.l10n.scrollTitle;\r\n        var yearInput = createNumberInput(\"cur-year\");\r\n        self.currentYearElement = yearInput.childNodes[0];\r\n        self.currentYearElement.title = self.l10n.scrollTitle;\r\n        if (self.config.minDate)\r\n            self.currentYearElement.min = self.config.minDate\r\n                .getFullYear()\r\n                .toString();\r\n        if (self.config.maxDate) {\r\n            self.currentYearElement.max = self.config.maxDate\r\n                .getFullYear()\r\n                .toString();\r\n            self.currentYearElement.disabled =\r\n                !!self.config.minDate &&\r\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\r\n        }\r\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\r\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\r\n        self.navigationCurrentMonth = createElement(\"span\", \"flatpickr-current-month\");\r\n        self.navigationCurrentMonth.appendChild(self.currentMonthElement);\r\n        self.navigationCurrentMonth.appendChild(yearInput);\r\n        monthNavFragment.appendChild(self.prevMonthNav);\r\n        monthNavFragment.appendChild(self.navigationCurrentMonth);\r\n        monthNavFragment.appendChild(self.nextMonthNav);\r\n        self.monthNav.appendChild(monthNavFragment);\r\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\r\n            get: function () { return self.__hidePrevMonthArrow; },\r\n            set: function (bool) {\r\n                if (self.__hidePrevMonthArrow !== bool)\r\n                    self.prevMonthNav.style.display = bool ? \"none\" : \"block\";\r\n                self.__hidePrevMonthArrow = bool;\r\n            },\r\n        });\r\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\r\n            get: function () { return self.__hideNextMonthArrow; },\r\n            set: function (bool) {\r\n                if (self.__hideNextMonthArrow !== bool)\r\n                    self.nextMonthNav.style.display = bool ? \"none\" : \"block\";\r\n                self.__hideNextMonthArrow = bool;\r\n            },\r\n        });\r\n        updateNavigationCurrentMonth();\r\n        return self.monthNav;\r\n    }\r\n    function buildTime() {\r\n        self.calendarContainer.classList.add(\"hasTime\");\r\n        if (self.config.noCalendar)\r\n            self.calendarContainer.classList.add(\"noCalendar\");\r\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\r\n        self.timeContainer.tabIndex = -1;\r\n        var separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\r\n        var hourInput = createNumberInput(\"flatpickr-hour\");\r\n        self.hourElement = hourInput.childNodes[0];\r\n        var minuteInput = createNumberInput(\"flatpickr-minute\");\r\n        self.minuteElement = minuteInput.childNodes[0];\r\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\r\n        self.hourElement.value = pad(self.latestSelectedDateObj\r\n            ? self.latestSelectedDateObj.getHours()\r\n            : self.config.time_24hr\r\n                ? self.config.defaultHour\r\n                : military2ampm(self.config.defaultHour));\r\n        self.minuteElement.value = pad(self.latestSelectedDateObj\r\n            ? self.latestSelectedDateObj.getMinutes()\r\n            : self.config.defaultMinute);\r\n        self.hourElement.step = self.config.hourIncrement.toString();\r\n        self.minuteElement.step = self.config.minuteIncrement.toString();\r\n        self.hourElement.min = self.config.time_24hr ? \"0\" : \"1\";\r\n        self.hourElement.max = self.config.time_24hr ? \"23\" : \"12\";\r\n        self.minuteElement.min = \"0\";\r\n        self.minuteElement.max = \"59\";\r\n        self.hourElement.title = self.minuteElement.title = self.l10n.scrollTitle;\r\n        self.timeContainer.appendChild(hourInput);\r\n        self.timeContainer.appendChild(separator);\r\n        self.timeContainer.appendChild(minuteInput);\r\n        if (self.config.time_24hr)\r\n            self.timeContainer.classList.add(\"time24hr\");\r\n        if (self.config.enableSeconds) {\r\n            self.timeContainer.classList.add(\"hasSeconds\");\r\n            var secondInput = createNumberInput(\"flatpickr-second\");\r\n            self.secondElement = secondInput.childNodes[0];\r\n            self.secondElement.value = pad(self.latestSelectedDateObj\r\n                ? self.latestSelectedDateObj.getSeconds()\r\n                : self.config.defaultSeconds);\r\n            self.secondElement.step = self.minuteElement.step;\r\n            self.secondElement.min = self.minuteElement.min;\r\n            self.secondElement.max = self.minuteElement.max;\r\n            self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\r\n            self.timeContainer.appendChild(secondInput);\r\n        }\r\n        if (!self.config.time_24hr) {\r\n            self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\r\n                ? self.hourElement.value\r\n                : self.config.defaultHour) > 11)]);\r\n            self.amPM.title = self.l10n.toggleTitle;\r\n            self.amPM.tabIndex = -1;\r\n            self.timeContainer.appendChild(self.amPM);\r\n        }\r\n        return self.timeContainer;\r\n    }\r\n    function buildWeekdays() {\r\n        if (!self.weekdayContainer)\r\n            self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\r\n        var firstDayOfWeek = self.l10n.firstDayOfWeek;\r\n        var weekdays = self.l10n.weekdays.shorthand.slice();\r\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\r\n            weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));\r\n        }\r\n        self.weekdayContainer.innerHTML = \"\\n    <span class=flatpickr-weekday>\\n      \" + weekdays.join(\"</span><span class=flatpickr-weekday>\") + \"\\n    </span>\\n    \";\r\n        return self.weekdayContainer;\r\n    }\r\n    function buildWeeks() {\r\n        self.calendarContainer.classList.add(\"hasWeeks\");\r\n        var weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\r\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\r\n        var weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\r\n        weekWrapper.appendChild(weekNumbers);\r\n        return {\r\n            weekWrapper: weekWrapper,\r\n            weekNumbers: weekNumbers,\r\n        };\r\n    }\r\n    function changeMonth(value, is_offset, animate, from_keyboard) {\r\n        if (is_offset === void 0) { is_offset = true; }\r\n        if (animate === void 0) { animate = self.config.animate; }\r\n        if (from_keyboard === void 0) { from_keyboard = false; }\r\n        var delta = is_offset ? value : value - self.currentMonth;\r\n        if ((delta < 0 && self._hidePrevMonthArrow) ||\r\n            (delta > 0 && self._hideNextMonthArrow))\r\n            return;\r\n        self.currentMonth += delta;\r\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\r\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\r\n            self.currentMonth = (self.currentMonth + 12) % 12;\r\n            triggerEvent(\"onYearChange\");\r\n        }\r\n        buildDays(animate ? delta : undefined);\r\n        if (!animate) {\r\n            triggerEvent(\"onMonthChange\");\r\n            return updateNavigationCurrentMonth();\r\n        }\r\n        var nav = self.navigationCurrentMonth;\r\n        if (delta < 0) {\r\n            while (nav.nextSibling &&\r\n                /curr/.test(nav.nextSibling.className))\r\n                self.monthNav.removeChild(nav.nextSibling);\r\n        }\r\n        else if (delta > 0) {\r\n            while (nav.previousSibling &&\r\n                /curr/.test(nav.previousSibling.className))\r\n                self.monthNav.removeChild(nav.previousSibling);\r\n        }\r\n        self.oldCurMonth = self.navigationCurrentMonth;\r\n        self.navigationCurrentMonth = self.monthNav.insertBefore(self.oldCurMonth.cloneNode(true), delta > 0 ? self.oldCurMonth.nextSibling : self.oldCurMonth);\r\n        var daysContainer = self.daysContainer;\r\n        if (daysContainer.firstChild && daysContainer.lastChild) {\r\n            if (delta > 0) {\r\n                daysContainer.firstChild.classList.add(\"slideLeft\");\r\n                daysContainer.lastChild.classList.add(\"slideLeftNew\");\r\n                self.oldCurMonth.classList.add(\"slideLeft\");\r\n                self.navigationCurrentMonth.classList.add(\"slideLeftNew\");\r\n            }\r\n            else if (delta < 0) {\r\n                daysContainer.firstChild.classList.add(\"slideRightNew\");\r\n                daysContainer.lastChild.classList.add(\"slideRight\");\r\n                self.oldCurMonth.classList.add(\"slideRight\");\r\n                self.navigationCurrentMonth.classList.add(\"slideRightNew\");\r\n            }\r\n        }\r\n        self.currentMonthElement = self.navigationCurrentMonth\r\n            .firstChild;\r\n        self.currentYearElement = self.navigationCurrentMonth.lastChild\r\n            .childNodes[0];\r\n        updateNavigationCurrentMonth();\r\n        if (self.oldCurMonth.firstChild)\r\n            self.oldCurMonth.firstChild.textContent = monthToStr(self.currentMonth - delta, self.config.shorthandCurrentMonth, self.l10n);\r\n        triggerEvent(\"onMonthChange\");\r\n        if (from_keyboard &&\r\n            document.activeElement &&\r\n            document.activeElement.$i) {\r\n            var index_1 = document.activeElement.$i;\r\n            afterDayAnim(function () {\r\n                focusOnDay(index_1, 0);\r\n            });\r\n        }\r\n    }\r\n    function clear(triggerChangeEvent) {\r\n        if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }\r\n        self.input.value = \"\";\r\n        if (self.altInput)\r\n            self.altInput.value = \"\";\r\n        if (self.mobileInput)\r\n            self.mobileInput.value = \"\";\r\n        self.selectedDates = [];\r\n        self.latestSelectedDateObj = undefined;\r\n        self.showTimeInput = false;\r\n        self.redraw();\r\n        if (triggerChangeEvent === true)\r\n            triggerEvent(\"onChange\");\r\n    }\r\n    function close() {\r\n        self.isOpen = false;\r\n        if (!self.isMobile) {\r\n            self.calendarContainer.classList.remove(\"open\");\r\n            self._input.classList.remove(\"active\");\r\n        }\r\n        triggerEvent(\"onClose\");\r\n    }\r\n    function destroy() {\r\n        if (self.config !== undefined)\r\n            triggerEvent(\"onDestroy\");\r\n        for (var i = self._handlers.length; i--;) {\r\n            var h = self._handlers[i];\r\n            h.element.removeEventListener(h.event, h.handler);\r\n        }\r\n        self._handlers = [];\r\n        if (self.mobileInput) {\r\n            if (self.mobileInput.parentNode)\r\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\r\n            self.mobileInput = undefined;\r\n        }\r\n        else if (self.calendarContainer && self.calendarContainer.parentNode)\r\n            self.calendarContainer.parentNode.removeChild(self.calendarContainer);\r\n        if (self.altInput) {\r\n            self.input.type = \"text\";\r\n            if (self.altInput.parentNode)\r\n                self.altInput.parentNode.removeChild(self.altInput);\r\n            delete self.altInput;\r\n        }\r\n        if (self.input) {\r\n            self.input.type = self.input._type;\r\n            self.input.classList.remove(\"flatpickr-input\");\r\n            self.input.removeAttribute(\"readonly\");\r\n            self.input.value = \"\";\r\n        }\r\n        [\r\n            \"_showTimeInput\",\r\n            \"latestSelectedDateObj\",\r\n            \"_hideNextMonthArrow\",\r\n            \"_hidePrevMonthArrow\",\r\n            \"__hideNextMonthArrow\",\r\n            \"__hidePrevMonthArrow\",\r\n            \"isMobile\",\r\n            \"isOpen\",\r\n            \"selectedDateElem\",\r\n            \"minDateHasTime\",\r\n            \"maxDateHasTime\",\r\n            \"days\",\r\n            \"daysContainer\",\r\n            \"_input\",\r\n            \"_positionElement\",\r\n            \"innerContainer\",\r\n            \"rContainer\",\r\n            \"monthNav\",\r\n            \"todayDateElem\",\r\n            \"calendarContainer\",\r\n            \"weekdayContainer\",\r\n            \"prevMonthNav\",\r\n            \"nextMonthNav\",\r\n            \"currentMonthElement\",\r\n            \"currentYearElement\",\r\n            \"navigationCurrentMonth\",\r\n            \"selectedDateElem\",\r\n            \"config\",\r\n        ].forEach(function (k) {\r\n            try {\r\n                delete self[k];\r\n            }\r\n            catch (_) { }\r\n        });\r\n    }\r\n    function isCalendarElem(elem) {\r\n        if (self.config.appendTo && self.config.appendTo.contains(elem))\r\n            return true;\r\n        return self.calendarContainer.contains(elem);\r\n    }\r\n    function documentClick(e) {\r\n        if (self.isOpen && !self.config.inline) {\r\n            var isCalendarElement = isCalendarElem(e.target);\r\n            var isInput = e.target === self.input ||\r\n                e.target === self.altInput ||\r\n                self.element.contains(e.target) ||\r\n                (e.path &&\r\n                    e.path.indexOf &&\r\n                    (~e.path.indexOf(self.input) ||\r\n                        ~e.path.indexOf(self.altInput)));\r\n            var lostFocus = e.type === \"blur\"\r\n                ? isInput &&\r\n                    e.relatedTarget &&\r\n                    !isCalendarElem(e.relatedTarget)\r\n                : !isInput && !isCalendarElement;\r\n            if (lostFocus &&\r\n                self.config.ignoredFocusElements.indexOf(e.target) === -1) {\r\n                self.close();\r\n                if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\r\n                    self.clear(false);\r\n                    self.redraw();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function changeYear(newYear) {\r\n        if (!newYear ||\r\n            (self.currentYearElement.min &&\r\n                newYear < parseInt(self.currentYearElement.min)) ||\r\n            (self.currentYearElement.max &&\r\n                newYear > parseInt(self.currentYearElement.max)))\r\n            return;\r\n        var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\r\n        self.currentYear = newYearNum || self.currentYear;\r\n        if (self.config.maxDate &&\r\n            self.currentYear === self.config.maxDate.getFullYear()) {\r\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\r\n        }\r\n        else if (self.config.minDate &&\r\n            self.currentYear === self.config.minDate.getFullYear()) {\r\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\r\n        }\r\n        if (isNewYear) {\r\n            self.redraw();\r\n            triggerEvent(\"onYearChange\");\r\n        }\r\n    }\r\n    function isEnabled(date, timeless) {\r\n        if (timeless === void 0) { timeless = true; }\r\n        var dateToCheck = self.parseDate(date, undefined, timeless);\r\n        if ((self.config.minDate &&\r\n            dateToCheck &&\r\n            compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\r\n            (self.config.maxDate &&\r\n                dateToCheck &&\r\n                compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\r\n            return false;\r\n        if (!self.config.enable.length && !self.config.disable.length)\r\n            return true;\r\n        if (dateToCheck === undefined)\r\n            return false;\r\n        var bool = self.config.enable.length > 0, array = bool ? self.config.enable : self.config.disable;\r\n        for (var i = 0, d = void 0; i < array.length; i++) {\r\n            d = array[i];\r\n            if (typeof d === \"function\" &&\r\n                d(dateToCheck))\r\n                return bool;\r\n            else if (d instanceof Date &&\r\n                dateToCheck !== undefined &&\r\n                d.getTime() === dateToCheck.getTime())\r\n                return bool;\r\n            else if (typeof d === \"string\" && dateToCheck !== undefined) {\r\n                var parsed = self.parseDate(d, undefined, true);\r\n                return parsed && parsed.getTime() === dateToCheck.getTime()\r\n                    ? bool\r\n                    : !bool;\r\n            }\r\n            else if (typeof d === \"object\" &&\r\n                dateToCheck !== undefined &&\r\n                d.from &&\r\n                d.to &&\r\n                dateToCheck.getTime() >= d.from.getTime() &&\r\n                dateToCheck.getTime() <= d.to.getTime())\r\n                return bool;\r\n        }\r\n        return !bool;\r\n    }\r\n    function onKeyDown(e) {\r\n        var isInput = e.target === self._input;\r\n        var calendarElem = isCalendarElem(e.target);\r\n        var allowInput = self.config.allowInput;\r\n        var allowKeydown = self.isOpen && (!allowInput || !isInput);\r\n        var allowInlineKeydown = self.config.inline && isInput && !allowInput;\r\n        if (e.key === \"Enter\" && isInput) {\r\n            if (allowInput) {\r\n                self.setDate(self._input.value, true, e.target === self.altInput\r\n                    ? self.config.altFormat\r\n                    : self.config.dateFormat);\r\n                return e.target.blur();\r\n            }\r\n            else\r\n                self.open();\r\n        }\r\n        else if (calendarElem || allowKeydown || allowInlineKeydown) {\r\n            var isTimeObj = !!self.timeContainer &&\r\n                self.timeContainer.contains(e.target);\r\n            switch (e.key) {\r\n                case \"Enter\":\r\n                    if (isTimeObj)\r\n                        updateValue();\r\n                    else\r\n                        selectDate(e);\r\n                    break;\r\n                case \"Escape\":\r\n                    e.preventDefault();\r\n                    self.close();\r\n                    break;\r\n                case \"Backspace\":\r\n                case \"Delete\":\r\n                    if (isInput && !self.config.allowInput)\r\n                        self.clear();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                case \"ArrowRight\":\r\n                    if (!isTimeObj) {\r\n                        e.preventDefault();\r\n                        if (self.daysContainer) {\r\n                            var delta_1 = e.key === \"ArrowRight\" ? 1 : -1;\r\n                            if (!e.ctrlKey)\r\n                                focusOnDay(e.target.$i, delta_1);\r\n                            else\r\n                                changeMonth(delta_1, true, undefined, true);\r\n                        }\r\n                    }\r\n                    else if (self.hourElement)\r\n                        self.hourElement.focus();\r\n                    break;\r\n                case \"ArrowUp\":\r\n                case \"ArrowDown\":\r\n                    e.preventDefault();\r\n                    var delta = e.key === \"ArrowDown\" ? 1 : -1;\r\n                    if (self.daysContainer && e.target.$i !== undefined) {\r\n                        if (e.ctrlKey) {\r\n                            changeYear(self.currentYear - delta);\r\n                            focusOnDay(e.target.$i, 0);\r\n                        }\r\n                        else if (!isTimeObj)\r\n                            focusOnDay(e.target.$i, delta * 7);\r\n                    }\r\n                    else if (self.config.enableTime) {\r\n                        if (!isTimeObj && self.hourElement)\r\n                            self.hourElement.focus();\r\n                        updateTime(e);\r\n                        self._debouncedChange();\r\n                    }\r\n                    break;\r\n                case \"Tab\":\r\n                    if (e.target === self.hourElement) {\r\n                        e.preventDefault();\r\n                        self.minuteElement.select();\r\n                    }\r\n                    else if (e.target === self.minuteElement &&\r\n                        (self.secondElement || self.amPM)) {\r\n                        e.preventDefault();\r\n                        if (self.secondElement !== undefined)\r\n                            self.secondElement.focus();\r\n                        else if (self.amPM !== undefined)\r\n                            self.amPM.focus();\r\n                    }\r\n                    else if (e.target === self.secondElement && self.amPM) {\r\n                        e.preventDefault();\r\n                        self.amPM.focus();\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (self.amPM !== undefined && e.target === self.amPM) {\r\n                        self.amPM.textContent = \"AM\";\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                    }\r\n                    break;\r\n                case \"p\":\r\n                    if (self.amPM !== undefined && e.target === self.amPM) {\r\n                        self.amPM.textContent = \"PM\";\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            triggerEvent(\"onKeyDown\", e);\r\n        }\r\n    }\r\n    function onMouseOver(elem) {\r\n        if (self.selectedDates.length !== 1 ||\r\n            !elem.classList.contains(\"flatpickr-day\") ||\r\n            self.minRangeDate === undefined ||\r\n            self.maxRangeDate === undefined)\r\n            return;\r\n        var hoverDate = elem.dateObj, initialDate = self.parseDate(self.selectedDates[0], undefined, true), rangeStartDate = Math.min(hoverDate.getTime(), self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate.getTime(), self.selectedDates[0].getTime()), containsDisabled = false;\r\n        for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\r\n            if (!isEnabled(new Date(t))) {\r\n                containsDisabled = true;\r\n                break;\r\n            }\r\n        }\r\n        var _loop_1 = function (timestamp, i) {\r\n            var outOfRange = timestamp < self.minRangeDate.getTime() ||\r\n                timestamp > self.maxRangeDate.getTime(), dayElem = self.days.childNodes[i];\r\n            if (outOfRange) {\r\n                dayElem.classList.add(\"notAllowed\");\r\n                [\"inRange\", \"startRange\", \"endRange\"].forEach(function (c) {\r\n                    dayElem.classList.remove(c);\r\n                });\r\n                return \"continue\";\r\n            }\r\n            else if (containsDisabled && !outOfRange)\r\n                return \"continue\";\r\n            [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach(function (c) {\r\n                dayElem.classList.remove(c);\r\n            });\r\n            var minRangeDate = Math.max(self.minRangeDate.getTime(), rangeStartDate), maxRangeDate = Math.min(self.maxRangeDate.getTime(), rangeEndDate);\r\n            elem.classList.add(hoverDate < self.selectedDates[0] ? \"startRange\" : \"endRange\");\r\n            if (initialDate < hoverDate && timestamp === initialDate.getTime())\r\n                dayElem.classList.add(\"startRange\");\r\n            else if (initialDate > hoverDate && timestamp === initialDate.getTime())\r\n                dayElem.classList.add(\"endRange\");\r\n            if (timestamp >= minRangeDate && timestamp <= maxRangeDate)\r\n                dayElem.classList.add(\"inRange\");\r\n        };\r\n        for (var timestamp = self.days.childNodes[0].dateObj.getTime(), i = 0; i < 42; i++, timestamp += duration.DAY) {\r\n            _loop_1(timestamp, i);\r\n        }\r\n    }\r\n    function onResize() {\r\n        if (self.isOpen && !self.config.static && !self.config.inline)\r\n            positionCalendar();\r\n    }\r\n    function open(e, positionElement) {\r\n        if (positionElement === void 0) { positionElement = self._input; }\r\n        if (self.isMobile) {\r\n            if (e) {\r\n                e.preventDefault();\r\n                e.target && e.target.blur();\r\n            }\r\n            setTimeout(function () {\r\n                self.mobileInput !== undefined && self.mobileInput.click();\r\n            }, 0);\r\n            triggerEvent(\"onOpen\");\r\n            return;\r\n        }\r\n        if (self.isOpen || self._input.disabled || self.config.inline)\r\n            return;\r\n        self.isOpen = true;\r\n        self.calendarContainer.classList.add(\"open\");\r\n        positionCalendar(positionElement);\r\n        self._input.classList.add(\"active\");\r\n        triggerEvent(\"onOpen\");\r\n    }\r\n    function minMaxDateSetter(type) {\r\n        return function (date) {\r\n            var dateObj = (self.config[\"_\" + type + \"Date\"] = self.parseDate(date));\r\n            var inverseDateObj = self.config[\"_\" + (type === \"min\" ? \"max\" : \"min\") + \"Date\"];\r\n            if (dateObj !== undefined) {\r\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\r\n                    dateObj.getHours() > 0 ||\r\n                        dateObj.getMinutes() > 0 ||\r\n                        dateObj.getSeconds() > 0;\r\n            }\r\n            if (self.selectedDates) {\r\n                self.selectedDates = self.selectedDates.filter(function (d) { return isEnabled(d); });\r\n                if (!self.selectedDates.length && type === \"min\")\r\n                    setHoursFromDate(dateObj);\r\n                updateValue();\r\n            }\r\n            if (self.daysContainer) {\r\n                redraw();\r\n                if (dateObj !== undefined)\r\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\r\n                else\r\n                    self.currentYearElement.removeAttribute(type);\r\n                self.currentYearElement.disabled =\r\n                    !!inverseDateObj &&\r\n                        dateObj !== undefined &&\r\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\r\n            }\r\n        };\r\n    }\r\n    function parseConfig() {\r\n        var boolOpts = [\r\n            \"wrap\",\r\n            \"weekNumbers\",\r\n            \"allowInput\",\r\n            \"clickOpens\",\r\n            \"time_24hr\",\r\n            \"enableTime\",\r\n            \"noCalendar\",\r\n            \"altInput\",\r\n            \"shorthandCurrentMonth\",\r\n            \"inline\",\r\n            \"static\",\r\n            \"enableSeconds\",\r\n            \"disableMobile\",\r\n        ];\r\n        var hooks = [\r\n            \"onChange\",\r\n            \"onClose\",\r\n            \"onDayCreate\",\r\n            \"onDestroy\",\r\n            \"onKeyDown\",\r\n            \"onMonthChange\",\r\n            \"onOpen\",\r\n            \"onParseConfig\",\r\n            \"onReady\",\r\n            \"onValueUpdate\",\r\n            \"onYearChange\",\r\n        ];\r\n        self.config = __assign({}, flatpickr.defaultConfig);\r\n        var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));\r\n        var formats$$1 = {};\r\n        Object.defineProperty(self.config, \"enable\", {\r\n            get: function () { return self.config._enable || []; },\r\n            set: function (dates) {\r\n                self.config._enable = parseDateRules(dates);\r\n            },\r\n        });\r\n        Object.defineProperty(self.config, \"disable\", {\r\n            get: function () { return self.config._disable || []; },\r\n            set: function (dates) {\r\n                self.config._disable = parseDateRules(dates);\r\n            },\r\n        });\r\n        if (!userConfig.dateFormat && userConfig.enableTime) {\r\n            formats$$1.dateFormat = userConfig.noCalendar\r\n                ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\r\n                : flatpickr.defaultConfig.dateFormat +\r\n                    \" H:i\" +\r\n                    (userConfig.enableSeconds ? \":S\" : \"\");\r\n        }\r\n        if (userConfig.altInput && userConfig.enableTime && !userConfig.altFormat) {\r\n            formats$$1.altFormat = userConfig.noCalendar\r\n                ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\r\n                : flatpickr.defaultConfig.altFormat +\r\n                    (\" h:i\" + (userConfig.enableSeconds ? \":S\" : \"\") + \" K\");\r\n        }\r\n        Object.defineProperty(self.config, \"minDate\", {\r\n            get: function () { return self.config._minDate; },\r\n            set: minMaxDateSetter(\"min\"),\r\n        });\r\n        Object.defineProperty(self.config, \"maxDate\", {\r\n            get: function () { return self.config._maxDate; },\r\n            set: minMaxDateSetter(\"max\"),\r\n        });\r\n        Object.assign(self.config, formats$$1, userConfig);\r\n        for (var i = 0; i < boolOpts.length; i++)\r\n            self.config[boolOpts[i]] =\r\n                self.config[boolOpts[i]] === true ||\r\n                    self.config[boolOpts[i]] === \"true\";\r\n        for (var i = hooks.length; i--;) {\r\n            if (self.config[hooks[i]] !== undefined) {\r\n                self.config[hooks[i]] = arrayify(self.config[hooks[i]] || []).map(bindToInstance);\r\n            }\r\n        }\r\n        for (var i = 0; i < self.config.plugins.length; i++) {\r\n            var pluginConf = self.config.plugins[i](self) || {};\r\n            for (var key in pluginConf) {\r\n                if (~hooks.indexOf(key)) {\r\n                    self.config[key] = arrayify(pluginConf[key])\r\n                        .map(bindToInstance)\r\n                        .concat(self.config[key]);\r\n                }\r\n                else if (typeof userConfig[key] === \"undefined\")\r\n                    self.config[key] = pluginConf[key];\r\n            }\r\n        }\r\n        self.isMobile =\r\n            !self.config.disableMobile &&\r\n                !self.config.inline &&\r\n                self.config.mode === \"single\" &&\r\n                !self.config.disable.length &&\r\n                !self.config.enable.length &&\r\n                !self.config.weekNumbers &&\r\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n        triggerEvent(\"onParseConfig\");\r\n    }\r\n    function setupLocale() {\r\n        if (typeof self.config.locale !== \"object\" &&\r\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\r\n            console.warn(\"flatpickr: invalid locale \" + self.config.locale);\r\n        self.l10n = __assign({}, flatpickr.l10ns.default, typeof self.config.locale === \"object\"\r\n            ? self.config.locale\r\n            : self.config.locale !== \"default\"\r\n                ? flatpickr.l10ns[self.config.locale]\r\n                : undefined);\r\n    }\r\n    function positionCalendar(positionElement) {\r\n        if (positionElement === void 0) { positionElement = self._positionElement; }\r\n        if (self.calendarContainer === undefined)\r\n            return;\r\n        var calendarHeight = self.calendarContainer.offsetHeight, calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPos === \"above\" ||\r\n            (configPos !== \"below\" &&\r\n                distanceFromBottom < calendarHeight &&\r\n                inputBounds.top > calendarHeight);\r\n        var top = window.pageYOffset +\r\n            inputBounds.top +\r\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\r\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\r\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\r\n        if (self.config.inline)\r\n            return;\r\n        var left = window.pageXOffset + inputBounds.left;\r\n        var right = window.document.body.offsetWidth - inputBounds.right;\r\n        var rightMost = left + calendarWidth > window.document.body.offsetWidth;\r\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\r\n        if (self.config.static)\r\n            return;\r\n        self.calendarContainer.style.top = top + \"px\";\r\n        if (!rightMost) {\r\n            self.calendarContainer.style.left = left + \"px\";\r\n            self.calendarContainer.style.right = \"auto\";\r\n        }\r\n        else {\r\n            self.calendarContainer.style.left = \"auto\";\r\n            self.calendarContainer.style.right = right + \"px\";\r\n        }\r\n    }\r\n    function redraw() {\r\n        if (self.config.noCalendar || self.isMobile)\r\n            return;\r\n        buildWeekdays();\r\n        updateNavigationCurrentMonth();\r\n        buildDays();\r\n    }\r\n    function selectDate(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        var isSelectable = function (day) {\r\n            return day.classList &&\r\n                day.classList.contains(\"flatpickr-day\") &&\r\n                !day.classList.contains(\"disabled\") &&\r\n                !day.classList.contains(\"notAllowed\");\r\n        };\r\n        var t = findParent(e.target, isSelectable);\r\n        if (t === undefined)\r\n            return;\r\n        var target = t;\r\n        var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\r\n        var shouldChangeMonth = selectedDate.getMonth() !== self.currentMonth &&\r\n            self.config.mode !== \"range\";\r\n        self.selectedDateElem = target;\r\n        if (self.config.mode === \"single\")\r\n            self.selectedDates = [selectedDate];\r\n        else if (self.config.mode === \"multiple\") {\r\n            var selectedIndex = isDateSelected(selectedDate);\r\n            if (selectedIndex)\r\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\r\n            else\r\n                self.selectedDates.push(selectedDate);\r\n        }\r\n        else if (self.config.mode === \"range\") {\r\n            if (self.selectedDates.length === 2)\r\n                self.clear();\r\n            self.selectedDates.push(selectedDate);\r\n            if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\r\n                self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\r\n        }\r\n        setHoursFromInputs();\r\n        if (shouldChangeMonth) {\r\n            var isNewYear = self.currentYear !== selectedDate.getFullYear();\r\n            self.currentYear = selectedDate.getFullYear();\r\n            self.currentMonth = selectedDate.getMonth();\r\n            if (isNewYear)\r\n                triggerEvent(\"onYearChange\");\r\n            triggerEvent(\"onMonthChange\");\r\n        }\r\n        buildDays();\r\n        if (self.config.minDate &&\r\n            self.minDateHasTime &&\r\n            self.config.enableTime &&\r\n            compareDates(selectedDate, self.config.minDate) === 0)\r\n            setHoursFromDate(self.config.minDate);\r\n        updateValue();\r\n        if (self.config.enableTime)\r\n            setTimeout(function () { return (self.showTimeInput = true); }, 50);\r\n        if (self.config.mode === \"range\") {\r\n            if (self.selectedDates.length === 1) {\r\n                onMouseOver(target);\r\n                self._hidePrevMonthArrow =\r\n                    self._hidePrevMonthArrow ||\r\n                        (self.minRangeDate !== undefined &&\r\n                            self.minRangeDate >\r\n                                self.days.childNodes[0].dateObj);\r\n                self._hideNextMonthArrow =\r\n                    self._hideNextMonthArrow ||\r\n                        (self.maxRangeDate !== undefined &&\r\n                            self.maxRangeDate <\r\n                                new Date(self.currentYear, self.currentMonth + 1, 1));\r\n            }\r\n            else\r\n                updateNavigationCurrentMonth();\r\n        }\r\n        triggerEvent(\"onChange\");\r\n        if (!shouldChangeMonth)\r\n            focusOnDay(target.$i, 0);\r\n        else\r\n            afterDayAnim(function () { return self.selectedDateElem && self.selectedDateElem.focus(); });\r\n        if (self.hourElement !== undefined)\r\n            setTimeout(function () { return self.hourElement !== undefined && self.hourElement.select(); }, 451);\r\n        if (self.config.closeOnSelect) {\r\n            var single = self.config.mode === \"single\" && !self.config.enableTime;\r\n            var range = self.config.mode === \"range\" &&\r\n                self.selectedDates.length === 2 &&\r\n                !self.config.enableTime;\r\n            if (single || range)\r\n                self.close();\r\n        }\r\n    }\r\n    function set(option, value) {\r\n        if (option !== null && typeof option === \"object\")\r\n            Object.assign(self.config, option);\r\n        else\r\n            self.config[option] = value;\r\n        self.redraw();\r\n        jumpToDate();\r\n    }\r\n    function setSelectedDate(inputDate, format) {\r\n        var dates = [];\r\n        if (inputDate instanceof Array)\r\n            dates = inputDate.map(function (d) { return self.parseDate(d, format); });\r\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\r\n            dates = [self.parseDate(inputDate, format)];\r\n        else if (typeof inputDate === \"string\") {\r\n            switch (self.config.mode) {\r\n                case \"single\":\r\n                    dates = [self.parseDate(inputDate, format)];\r\n                    break;\r\n                case \"multiple\":\r\n                    dates = inputDate\r\n                        .split(\"; \")\r\n                        .map(function (date) { return self.parseDate(date, format); });\r\n                    break;\r\n                case \"range\":\r\n                    dates = inputDate\r\n                        .split(self.l10n.rangeSeparator)\r\n                        .map(function (date) { return self.parseDate(date, format); });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        self.selectedDates = dates.filter(function (d) { return d instanceof Date && isEnabled(d, false); });\r\n        self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\r\n    }\r\n    function setDate(date, triggerChange, format) {\r\n        if (triggerChange === void 0) { triggerChange = false; }\r\n        if (format === void 0) { format = undefined; }\r\n        if (date !== 0 && !date)\r\n            return self.clear(triggerChange);\r\n        setSelectedDate(date, format);\r\n        self.showTimeInput = self.selectedDates.length > 0;\r\n        self.latestSelectedDateObj = self.selectedDates[0];\r\n        self.redraw();\r\n        jumpToDate();\r\n        setHoursFromDate();\r\n        updateValue(triggerChange);\r\n        if (triggerChange)\r\n            triggerEvent(\"onChange\");\r\n    }\r\n    function parseDateRules(arr) {\r\n        return arr\r\n            .map(function (rule) {\r\n            if (typeof rule === \"string\" ||\r\n                typeof rule === \"number\" ||\r\n                rule instanceof Date) {\r\n                return self.parseDate(rule, undefined, true);\r\n            }\r\n            else if (rule &&\r\n                typeof rule === \"object\" &&\r\n                rule.from &&\r\n                rule.to)\r\n                return {\r\n                    from: self.parseDate(rule.from, undefined),\r\n                    to: self.parseDate(rule.to, undefined),\r\n                };\r\n            return rule;\r\n        })\r\n            .filter(function (x) { return x; });\r\n    }\r\n    function setupDates() {\r\n        self.selectedDates = [];\r\n        self.now = new Date();\r\n        var preloadedDate = self.config.defaultDate || self.input.value;\r\n        if (preloadedDate)\r\n            setSelectedDate(preloadedDate, self.config.dateFormat);\r\n        var initialDate = self.selectedDates.length\r\n            ? self.selectedDates[0]\r\n            : self.config.minDate &&\r\n                self.config.minDate.getTime() > self.now.getTime()\r\n                ? self.config.minDate\r\n                : self.config.maxDate &&\r\n                    self.config.maxDate.getTime() < self.now.getTime()\r\n                    ? self.config.maxDate\r\n                    : self.now;\r\n        self.currentYear = initialDate.getFullYear();\r\n        self.currentMonth = initialDate.getMonth();\r\n        if (self.selectedDates.length)\r\n            self.latestSelectedDateObj = self.selectedDates[0];\r\n        self.minDateHasTime =\r\n            !!self.config.minDate &&\r\n                (self.config.minDate.getHours() > 0 ||\r\n                    self.config.minDate.getMinutes() > 0 ||\r\n                    self.config.minDate.getSeconds() > 0);\r\n        self.maxDateHasTime =\r\n            !!self.config.maxDate &&\r\n                (self.config.maxDate.getHours() > 0 ||\r\n                    self.config.maxDate.getMinutes() > 0 ||\r\n                    self.config.maxDate.getSeconds() > 0);\r\n        Object.defineProperty(self, \"showTimeInput\", {\r\n            get: function () { return self._showTimeInput; },\r\n            set: function (bool) {\r\n                self._showTimeInput = bool;\r\n                if (self.calendarContainer)\r\n                    toggleClass(self.calendarContainer, \"showTimeInput\", bool);\r\n                positionCalendar();\r\n            },\r\n        });\r\n    }\r\n    function formatDate(dateObj, frmt) {\r\n        if (self.config !== undefined && self.config.formatDate !== undefined)\r\n            return self.config.formatDate(dateObj, frmt);\r\n        return frmt\r\n            .split(\"\")\r\n            .map(function (c, i, arr) {\r\n            return formats[c] && arr[i - 1] !== \"\\\\\"\r\n                ? formats[c](dateObj, self.l10n, self.config)\r\n                : c !== \"\\\\\" ? c : \"\";\r\n        })\r\n            .join(\"\");\r\n    }\r\n    function parseDate(date, givenFormat, timeless) {\r\n        if (date !== 0 && !date)\r\n            return undefined;\r\n        var parsedDate;\r\n        var date_orig = date;\r\n        if (date instanceof Date)\r\n            parsedDate = new Date(date.getTime());\r\n        else if (typeof date !== \"string\" &&\r\n            date.toFixed !== undefined)\r\n            parsedDate = new Date(date);\r\n        else if (typeof date === \"string\") {\r\n            var format = givenFormat || (self.config || flatpickr.defaultConfig).dateFormat;\r\n            var datestr = String(date).trim();\r\n            if (datestr === \"today\") {\r\n                parsedDate = new Date();\r\n                timeless = true;\r\n            }\r\n            else if (/Z$/.test(datestr) ||\r\n                /GMT$/.test(datestr))\r\n                parsedDate = new Date(date);\r\n            else if (self.config && self.config.parseDate)\r\n                parsedDate = self.config.parseDate(date, format);\r\n            else {\r\n                parsedDate =\r\n                    !self.config || !self.config.noCalendar\r\n                        ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\r\n                        : new Date(new Date().setHours(0, 0, 0, 0));\r\n                var matched = void 0, ops = [];\r\n                for (var i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\r\n                    var token = format[i];\r\n                    var isBackSlash = token === \"\\\\\";\r\n                    var escaped = format[i - 1] === \"\\\\\" || isBackSlash;\r\n                    if (tokenRegex[token] && !escaped) {\r\n                        regexStr += tokenRegex[token];\r\n                        var match = new RegExp(regexStr).exec(date);\r\n                        if (match && (matched = true)) {\r\n                            ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\r\n                                fn: revFormat[token],\r\n                                val: match[++matchIndex],\r\n                            });\r\n                        }\r\n                    }\r\n                    else if (!isBackSlash)\r\n                        regexStr += \".\";\r\n                    ops.forEach(function (_a) {\r\n                        var fn = _a.fn, val = _a.val;\r\n                        return (parsedDate =\r\n                            fn(parsedDate, val, self.l10n) || parsedDate);\r\n                    });\r\n                }\r\n                parsedDate = matched ? parsedDate : undefined;\r\n            }\r\n        }\r\n        if (!(parsedDate instanceof Date)) {\r\n            console.warn(\"flatpickr: invalid date \" + date_orig);\r\n            console.info(self.element);\r\n            return undefined;\r\n        }\r\n        if (timeless === true)\r\n            parsedDate.setHours(0, 0, 0, 0);\r\n        return parsedDate;\r\n    }\r\n    function setupInputs() {\r\n        self.input = self.config.wrap\r\n            ? element.querySelector(\"[data-input]\")\r\n            : element;\r\n        if (!self.input) {\r\n            console.warn(\"Error: invalid input element specified\", self.input);\r\n            return;\r\n        }\r\n        self.input._type = self.input.type;\r\n        self.input.type = \"text\";\r\n        self.input.classList.add(\"flatpickr-input\");\r\n        self._input = self.input;\r\n        if (self.config.altInput) {\r\n            self.altInput = createElement(self.input.nodeName, self.input.className + \" \" + self.config.altInputClass);\r\n            self._input = self.altInput;\r\n            self.altInput.placeholder = self.input.placeholder;\r\n            self.altInput.disabled = self.input.disabled;\r\n            self.altInput.required = self.input.required;\r\n            self.altInput.type = \"text\";\r\n            self.input.type = \"hidden\";\r\n            if (!self.config.static && self.input.parentNode)\r\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\r\n        }\r\n        if (!self.config.allowInput)\r\n            self._input.setAttribute(\"readonly\", \"readonly\");\r\n        self._positionElement = self.config.positionElement || self._input;\r\n    }\r\n    function setupMobile() {\r\n        var inputType = self.config.enableTime\r\n            ? self.config.noCalendar ? \"time\" : \"datetime-local\"\r\n            : \"date\";\r\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\r\n        self.mobileInput.step = self.input.getAttribute(\"step\") || \"any\";\r\n        self.mobileInput.tabIndex = 1;\r\n        self.mobileInput.type = inputType;\r\n        self.mobileInput.disabled = self.input.disabled;\r\n        self.mobileInput.placeholder = self.input.placeholder;\r\n        self.mobileFormatStr =\r\n            inputType === \"datetime-local\"\r\n                ? \"Y-m-d\\\\TH:i:S\"\r\n                : inputType === \"date\" ? \"Y-m-d\" : \"H:i:S\";\r\n        if (self.selectedDates.length) {\r\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\r\n        }\r\n        if (self.config.minDate)\r\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\r\n        if (self.config.maxDate)\r\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\r\n        self.input.type = \"hidden\";\r\n        if (self.altInput !== undefined)\r\n            self.altInput.type = \"hidden\";\r\n        try {\r\n            if (self.input.parentNode)\r\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\r\n        }\r\n        catch (_a) { }\r\n        self.mobileInput.addEventListener(\"change\", function (e) {\r\n            self.setDate(e.target.value, false, self.mobileFormatStr);\r\n            triggerEvent(\"onChange\");\r\n            triggerEvent(\"onClose\");\r\n        });\r\n    }\r\n    function toggle() {\r\n        if (self.isOpen)\r\n            return self.close();\r\n        self.open();\r\n    }\r\n    function triggerEvent(event, data) {\r\n        var hooks = self.config[event];\r\n        if (hooks !== undefined && hooks.length > 0) {\r\n            for (var i = 0; hooks[i] && i < hooks.length; i++)\r\n                hooks[i](self.selectedDates, self.input.value, self, data);\r\n        }\r\n        if (event === \"onChange\") {\r\n            self.input.dispatchEvent(createEvent(\"change\"));\r\n            self.input.dispatchEvent(createEvent(\"input\"));\r\n        }\r\n    }\r\n    function createEvent(name) {\r\n        var e = document.createEvent(\"Event\");\r\n        e.initEvent(name, true, true);\r\n        return e;\r\n    }\r\n    function isDateSelected(date) {\r\n        for (var i = 0; i < self.selectedDates.length; i++) {\r\n            if (compareDates(self.selectedDates[i], date) === 0)\r\n                return \"\" + i;\r\n        }\r\n        return false;\r\n    }\r\n    function isDateInRange(date) {\r\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\r\n            return false;\r\n        return (compareDates(date, self.selectedDates[0]) >= 0 &&\r\n            compareDates(date, self.selectedDates[1]) <= 0);\r\n    }\r\n    function updateNavigationCurrentMonth() {\r\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\r\n            return;\r\n        self.currentMonthElement.textContent =\r\n            monthToStr(self.currentMonth, self.config.shorthandCurrentMonth, self.l10n) + \" \";\r\n        self.currentYearElement.value = self.currentYear.toString();\r\n        self._hidePrevMonthArrow =\r\n            self.config.minDate !== undefined &&\r\n                (self.currentYear === self.config.minDate.getFullYear()\r\n                    ? self.currentMonth <= self.config.minDate.getMonth()\r\n                    : self.currentYear < self.config.minDate.getFullYear());\r\n        self._hideNextMonthArrow =\r\n            self.config.maxDate !== undefined &&\r\n                (self.currentYear === self.config.maxDate.getFullYear()\r\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\r\n                    : self.currentYear > self.config.maxDate.getFullYear());\r\n    }\r\n    function updateValue(triggerChange) {\r\n        if (triggerChange === void 0) { triggerChange = true; }\r\n        if (!self.selectedDates.length)\r\n            return self.clear(triggerChange);\r\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\r\n            self.mobileInput.value =\r\n                self.latestSelectedDateObj !== undefined\r\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\r\n                    : \"\";\r\n        }\r\n        var joinChar = self.config.mode !== \"range\"\r\n            ? self.config.conjunction\r\n            : self.l10n.rangeSeparator;\r\n        self.input.value = self.selectedDates\r\n            .map(function (dObj) { return self.formatDate(dObj, self.config.dateFormat); })\r\n            .join(joinChar);\r\n        if (self.altInput !== undefined) {\r\n            self.altInput.value = self.selectedDates\r\n                .map(function (dObj) { return self.formatDate(dObj, self.config.altFormat); })\r\n                .join(joinChar);\r\n        }\r\n        if (triggerChange !== false)\r\n            triggerEvent(\"onValueUpdate\");\r\n    }\r\n    function onMonthNavScroll(e) {\r\n        e.preventDefault();\r\n        var isYear = self.currentYearElement.parentNode &&\r\n            self.currentYearElement.parentNode.contains(e.target);\r\n        if (e.target === self.currentMonthElement || isYear) {\r\n            var delta = mouseDelta(e);\r\n            if (isYear) {\r\n                changeYear(self.currentYear + delta);\r\n                e.target.value = self.currentYear.toString();\r\n            }\r\n            else\r\n                self.changeMonth(delta, true, false);\r\n        }\r\n    }\r\n    function onMonthNavClick(e) {\r\n        var isPrevMonth = self.prevMonthNav.contains(e.target);\r\n        var isNextMonth = self.nextMonthNav.contains(e.target);\r\n        if (isPrevMonth || isNextMonth)\r\n            changeMonth(isPrevMonth ? -1 : 1);\r\n        else if (e.target === self.currentYearElement) {\r\n            e.preventDefault();\r\n            self.currentYearElement.select();\r\n        }\r\n        else if (e.target.className === \"arrowUp\")\r\n            self.changeYear(self.currentYear + 1);\r\n        else if (e.target.className === \"arrowDown\")\r\n            self.changeYear(self.currentYear - 1);\r\n    }\r\n    function timeWrapper(e) {\r\n        e.preventDefault();\r\n        var isKeyDown = e.type === \"keydown\", input = e.target;\r\n        if (self.amPM !== undefined && e.target === self.amPM)\r\n            self.amPM.textContent =\r\n                self.l10n.amPM[self.amPM.textContent === \"AM\" ? 1 : 0];\r\n        var min = Number(input.min), max = Number(input.max), step = Number(input.step), curValue = parseInt(input.value, 10), delta = e.delta ||\r\n            (isKeyDown\r\n                ? e.which === 38 ? 1 : -1\r\n                : Math.max(-1, Math.min(1, e.wheelDelta || -e.deltaY)) || 0);\r\n        var newValue = curValue + step * delta;\r\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\r\n            var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\r\n            if (newValue < min) {\r\n                newValue =\r\n                    max +\r\n                        newValue +\r\n                        int(!isHourElem) +\r\n                        (int(isHourElem) && int(!self.amPM));\r\n                if (isMinuteElem)\r\n                    incrementNumInput(undefined, -1, self.hourElement);\r\n            }\r\n            else if (newValue > max) {\r\n                newValue =\r\n                    input === self.hourElement ? newValue - max - int(!self.amPM) : min;\r\n                if (isMinuteElem)\r\n                    incrementNumInput(undefined, 1, self.hourElement);\r\n            }\r\n            if (self.amPM &&\r\n                isHourElem &&\r\n                (step === 1\r\n                    ? newValue + curValue === 23\r\n                    : Math.abs(newValue - curValue) > step))\r\n                self.amPM.textContent = self.amPM.textContent === \"PM\" ? \"AM\" : \"PM\";\r\n            input.value = pad(newValue);\r\n        }\r\n    }\r\n    init();\r\n    return self;\r\n}\r\nfunction _flatpickr(nodeList, config) {\r\n    var nodes = Array.prototype.slice.call(nodeList);\r\n    var instances = [];\r\n    for (var i = 0; i < nodes.length; i++) {\r\n        var node = nodes[i];\r\n        try {\r\n            if (node.getAttribute(\"data-fp-omit\") !== null)\r\n                continue;\r\n            if (node._flatpickr !== undefined) {\r\n                node._flatpickr.destroy();\r\n                node._flatpickr = undefined;\r\n            }\r\n            node._flatpickr = FlatpickrInstance(node, config || {});\r\n            instances.push(node._flatpickr);\r\n        }\r\n        catch (e) {\r\n            console.warn(e, e.stack);\r\n        }\r\n    }\r\n    return instances.length === 1 ? instances[0] : instances;\r\n}\r\nif (typeof HTMLElement !== \"undefined\") {\r\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\r\n        return _flatpickr(this, config);\r\n    };\r\n    HTMLElement.prototype.flatpickr = function (config) {\r\n        return _flatpickr([this], config);\r\n    };\r\n}\r\nvar flatpickr;\r\nflatpickr = function (selector, config) {\r\n    if (selector instanceof NodeList)\r\n        return _flatpickr(selector, config);\r\n    else if (typeof selector === \"string\")\r\n        return _flatpickr(window.document.querySelectorAll(selector), config);\r\n    return _flatpickr([selector], config);\r\n};\r\nwindow.flatpickr = flatpickr;\r\nflatpickr.defaultConfig = defaults;\r\nflatpickr.l10ns = {\r\n    en: __assign({}, english),\r\n    default: __assign({}, english),\r\n};\r\nflatpickr.localize = function (l10n) {\r\n    flatpickr.l10ns.default = __assign({}, flatpickr.l10ns.default, l10n);\r\n};\r\nflatpickr.setDefaults = function (config) {\r\n    flatpickr.defaultConfig = __assign({}, flatpickr.defaultConfig, config);\r\n};\r\nif (typeof jQuery !== \"undefined\") {\r\n    jQuery.fn.flatpickr = function (config) {\r\n        return _flatpickr(this, config);\r\n    };\r\n}\r\nDate.prototype.fp_incr = function (days) {\r\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\r\n};\r\nvar flatpickr$1 = flatpickr;\n\nreturn flatpickr$1;\n\n})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nexports.__esModule = true;\nvar defaultConfig = {\n    confirmIcon: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='17' height='17' viewBox='0 0 17 17'> <g> </g> <path d='M15.418 1.774l-8.833 13.485-4.918-4.386 0.666-0.746 4.051 3.614 8.198-12.515 0.836 0.548z' fill='#000000' /> </svg>\",\n    confirmText: \"OK \",\n    showAlways: false,\n    theme: \"light\"\n};\nfunction confirmDatePlugin(pluginConfig) {\n    var config = __assign({}, defaultConfig, pluginConfig);\n    var confirmContainer;\n    return function (fp) {\n        var hooks = __assign({ onKeyDown: function (_, __, ___, e) {\n                if (fp.config.enableTime && e.key === \"Tab\" && e.target === fp.amPM) {\n                    e.preventDefault();\n                    confirmContainer.focus();\n                }\n                else if (e.key === \"Enter\" && e.target === confirmContainer)\n                    fp.close();\n            },\n            onReady: function () {\n                if (fp.calendarContainer === undefined)\n                    return;\n                confirmContainer = fp._createElement(\"div\", \"flatpickr-confirm \" + (config.showAlways\n                    ? \"visible\"\n                    : \"\") + \" \" + config.theme + \"Theme\", config.confirmText);\n                confirmContainer.tabIndex = -1;\n                confirmContainer.innerHTML += config.confirmIcon;\n                confirmContainer.addEventListener(\"click\", fp.close);\n                fp.calendarContainer.appendChild(confirmContainer);\n            } }, !config.showAlways\n            ? {\n                onChange: function (_, dateStr) {\n                    var showCondition = fp.config.enableTime || fp.config.mode === \"multiple\";\n                    if (dateStr && !fp.config.inline && showCondition)\n                        return confirmContainer.classList.add(\"visible\");\n                    confirmContainer.classList.remove(\"visible\");\n                }\n            }\n            : {});\n        return hooks;\n    };\n}\nexports[\"default\"] = confirmDatePlugin;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// assets/js/wp-post-expiration.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e70679188a85c8043761","import flatpickr from 'flatpickr';\nimport ConfirmDatePlugin from 'flatpickr/dist/plugins/confirmDate/confirmDate';\n\nArray\n    .from(document.querySelectorAll('.wp-post-expiration'))\n    .forEach(\n        (field) => {\n            flatpickr(\n                field.querySelector('.js-flatpickr'),\n                {\n                    altInput: true,\n                    altFormat: 'M j, Y h:i K', // https://chmln.github.io/flatpickr/formatting/\n                    dateFormat: 'U',\n                    enableTime: true,\n                    onReady: (dateObj, dateStr, instance) => {\n                        const clearBtn = field.querySelector('.js-flatpickr-reset');\n                        clearBtn.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            instance.clear();\n                            instance.close();\n                        });\n\n                    },\n                    plugins: [new ConfirmDatePlugin({})]\n                }\n            );\n        }\n    );\n\n\n// WEBPACK FOOTER //\n// ./source/js/wp-post-expiration.js","/* flatpickr v3.1.4, @license MIT */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.flatpickr = factory());\n}(this, (function () { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\nfunction compareDates(date1, date2, timeless) {\r\n    if (timeless !== false) {\r\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\r\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\r\n    }\r\n    return date1.getTime() - date2.getTime();\r\n}\r\nvar monthToStr = function (monthNumber, shorthand, locale) { return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber]; };\r\nvar getWeek = function (givenDate) {\r\n    var onejan = new Date(givenDate.getFullYear(), 0, 1);\r\n    return Math.ceil(((givenDate.getTime() - onejan.getTime()) / 86400000 +\r\n        onejan.getDay() +\r\n        1) /\r\n        7);\r\n};\r\nvar duration = {\r\n    DAY: 86400000,\r\n};\n\nvar defaults = {\r\n    _disable: [],\r\n    _enable: [],\r\n    allowInput: false,\r\n    altFormat: \"F j, Y\",\r\n    altInput: false,\r\n    altInputClass: \"form-control input\",\r\n    animate: window && window.navigator.userAgent.indexOf(\"MSIE\") === -1,\r\n    ariaDateFormat: \"F j, Y\",\r\n    clickOpens: true,\r\n    closeOnSelect: true,\r\n    conjunction: \", \",\r\n    dateFormat: \"Y-m-d\",\r\n    defaultHour: 12,\r\n    defaultMinute: 0,\r\n    defaultSeconds: 0,\r\n    disable: [],\r\n    disableMobile: false,\r\n    enable: [],\r\n    enableSeconds: false,\r\n    enableTime: false,\r\n    getWeek: getWeek,\r\n    hourIncrement: 1,\r\n    ignoredFocusElements: [],\r\n    inline: false,\r\n    locale: \"default\",\r\n    minuteIncrement: 5,\r\n    mode: \"single\",\r\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\r\n    noCalendar: false,\r\n    onChange: [],\r\n    onClose: [],\r\n    onDayCreate: [],\r\n    onDestroy: [],\r\n    onKeyDown: [],\r\n    onMonthChange: [],\r\n    onOpen: [],\r\n    onParseConfig: [],\r\n    onReady: [],\r\n    onValueUpdate: [],\r\n    onYearChange: [],\r\n    plugins: [],\r\n    position: \"auto\",\r\n    positionElement: undefined,\r\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\r\n    shorthandCurrentMonth: false,\r\n    static: false,\r\n    time_24hr: false,\r\n    weekNumbers: false,\r\n    wrap: false,\r\n};\n\nvar english = {\r\n    weekdays: {\r\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n        longhand: [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n        ],\r\n    },\r\n    months: {\r\n        shorthand: [\r\n            \"Jan\",\r\n            \"Feb\",\r\n            \"Mar\",\r\n            \"Apr\",\r\n            \"May\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Aug\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\",\r\n        ],\r\n        longhand: [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n        ],\r\n    },\r\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n    firstDayOfWeek: 0,\r\n    ordinal: function (nth) {\r\n        var s = nth % 100;\r\n        if (s > 3 && s < 21)\r\n            return \"th\";\r\n        switch (s % 10) {\r\n            case 1:\r\n                return \"st\";\r\n            case 2:\r\n                return \"nd\";\r\n            case 3:\r\n                return \"rd\";\r\n            default:\r\n                return \"th\";\r\n        }\r\n    },\r\n    rangeSeparator: \" to \",\r\n    weekAbbreviation: \"Wk\",\r\n    scrollTitle: \"Scroll to increment\",\r\n    toggleTitle: \"Click to toggle\",\r\n    amPM: [\"AM\", \"PM\"],\r\n};\n\nvar pad = function (number) { return (\"0\" + number).slice(-2); };\r\nvar int = function (bool) { return (bool === true ? 1 : 0); };\r\nfunction debounce(func, wait, immediate) {\r\n    if (immediate === void 0) { immediate = false; }\r\n    var timeout;\r\n    return function () {\r\n        var context = this, args = arguments;\r\n        timeout !== null && clearTimeout(timeout);\r\n        timeout = setTimeout(function () {\r\n            timeout = null;\r\n            if (!immediate)\r\n                func.apply(context, args);\r\n        }, wait);\r\n        if (immediate && !timeout)\r\n            func.apply(context, args);\r\n    };\r\n}\r\nvar arrayify = function (obj) {\r\n    return obj instanceof Array ? obj : [obj];\r\n};\r\nfunction mouseDelta(e) {\r\n    var delta = e.wheelDelta || -e.deltaY;\r\n    return delta >= 0 ? 1 : -1;\r\n}\n\nfunction toggleClass(elem, className, bool) {\r\n    if (bool === true)\r\n        return elem.classList.add(className);\r\n    elem.classList.remove(className);\r\n}\r\nfunction createElement(tag, className, content) {\r\n    var e = window.document.createElement(tag);\r\n    className = className || \"\";\r\n    content = content || \"\";\r\n    e.className = className;\r\n    if (content !== undefined)\r\n        e.textContent = content;\r\n    return e;\r\n}\r\nfunction clearNode(node) {\r\n    while (node.firstChild)\r\n        node.removeChild(node.firstChild);\r\n}\r\nfunction findParent(node, condition) {\r\n    if (condition(node))\r\n        return node;\r\n    else if (node.parentNode)\r\n        return findParent(node.parentNode, condition);\r\n    return undefined;\r\n}\r\nfunction createNumberInput(inputClassName) {\r\n    var wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\r\n    numInput.type = \"text\";\r\n    numInput.pattern = \"\\\\d*\";\r\n    wrapper.appendChild(numInput);\r\n    wrapper.appendChild(arrowUp);\r\n    wrapper.appendChild(arrowDown);\r\n    return wrapper;\r\n}\n\nvar do_nothing = function () { return undefined; };\r\nvar revFormat = {\r\n    D: do_nothing,\r\n    F: function (dateObj, monthName, locale) {\r\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\r\n    },\r\n    G: function (dateObj, hour) {\r\n        dateObj.setHours(parseFloat(hour));\r\n    },\r\n    H: function (dateObj, hour) {\r\n        dateObj.setHours(parseFloat(hour));\r\n    },\r\n    J: function (dateObj, day) {\r\n        dateObj.setDate(parseFloat(day));\r\n    },\r\n    K: function (dateObj, amPM) {\r\n        dateObj.setHours(dateObj.getHours() % 12 + 12 * int(/pm/i.test(amPM)));\r\n    },\r\n    M: function (dateObj, shortMonth, locale) {\r\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\r\n    },\r\n    S: function (dateObj, seconds) {\r\n        dateObj.setSeconds(parseFloat(seconds));\r\n    },\r\n    U: function (_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },\r\n    W: function (dateObj, weekNum) {\r\n        var weekNumber = parseInt(weekNum);\r\n        return new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\r\n    },\r\n    Y: function (dateObj, year) {\r\n        dateObj.setFullYear(parseFloat(year));\r\n    },\r\n    Z: function (_, ISODate) { return new Date(ISODate); },\r\n    d: function (dateObj, day) {\r\n        dateObj.setDate(parseFloat(day));\r\n    },\r\n    h: function (dateObj, hour) {\r\n        dateObj.setHours(parseFloat(hour));\r\n    },\r\n    i: function (dateObj, minutes) {\r\n        dateObj.setMinutes(parseFloat(minutes));\r\n    },\r\n    j: function (dateObj, day) {\r\n        dateObj.setDate(parseFloat(day));\r\n    },\r\n    l: do_nothing,\r\n    m: function (dateObj, month) {\r\n        dateObj.setMonth(parseFloat(month) - 1);\r\n    },\r\n    n: function (dateObj, month) {\r\n        dateObj.setMonth(parseFloat(month) - 1);\r\n    },\r\n    s: function (dateObj, seconds) {\r\n        dateObj.setSeconds(parseFloat(seconds));\r\n    },\r\n    w: do_nothing,\r\n    y: function (dateObj, year) {\r\n        dateObj.setFullYear(2000 + parseFloat(year));\r\n    },\r\n};\r\nvar tokenRegex = {\r\n    D: \"(\\\\w+)\",\r\n    F: \"(\\\\w+)\",\r\n    G: \"(\\\\d\\\\d|\\\\d)\",\r\n    H: \"(\\\\d\\\\d|\\\\d)\",\r\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\r\n    K: \"(am|AM|Am|aM|pm|PM|Pm|pM)\",\r\n    M: \"(\\\\w+)\",\r\n    S: \"(\\\\d\\\\d|\\\\d)\",\r\n    U: \"(.+)\",\r\n    W: \"(\\\\d\\\\d|\\\\d)\",\r\n    Y: \"(\\\\d{4})\",\r\n    Z: \"(.+)\",\r\n    d: \"(\\\\d\\\\d|\\\\d)\",\r\n    h: \"(\\\\d\\\\d|\\\\d)\",\r\n    i: \"(\\\\d\\\\d|\\\\d)\",\r\n    j: \"(\\\\d\\\\d|\\\\d)\",\r\n    l: \"(\\\\w+)\",\r\n    m: \"(\\\\d\\\\d|\\\\d)\",\r\n    n: \"(\\\\d\\\\d|\\\\d)\",\r\n    s: \"(\\\\d\\\\d|\\\\d)\",\r\n    w: \"(\\\\d\\\\d|\\\\d)\",\r\n    y: \"(\\\\d{2})\",\r\n};\r\nvar formats = {\r\n    Z: function (date) { return date.toISOString(); },\r\n    D: function (date, locale, options) {\r\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\r\n    },\r\n    F: function (date, locale, options) {\r\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\r\n    },\r\n    G: function (date, locale, options) {\r\n        return pad(formats.h(date, locale, options));\r\n    },\r\n    H: function (date) { return pad(date.getHours()); },\r\n    J: function (date, locale) {\r\n        return locale.ordinal !== undefined\r\n            ? date.getDate() + locale.ordinal(date.getDate())\r\n            : date.getDate();\r\n    },\r\n    K: function (date) { return (date.getHours() > 11 ? \"PM\" : \"AM\"); },\r\n    M: function (date, locale) {\r\n        return monthToStr(date.getMonth(), true, locale);\r\n    },\r\n    S: function (date) { return pad(date.getSeconds()); },\r\n    U: function (date) { return date.getTime() / 1000; },\r\n    W: function (date, _, options) {\r\n        return options.getWeek(date);\r\n    },\r\n    Y: function (date) { return date.getFullYear(); },\r\n    d: function (date) { return pad(date.getDate()); },\r\n    h: function (date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\r\n    i: function (date) { return pad(date.getMinutes()); },\r\n    j: function (date) { return date.getDate(); },\r\n    l: function (date, locale) {\r\n        return locale.weekdays.longhand[date.getDay()];\r\n    },\r\n    m: function (date) { return pad(date.getMonth() + 1); },\r\n    n: function (date) { return date.getMonth() + 1; },\r\n    s: function (date) { return date.getSeconds(); },\r\n    w: function (date) { return date.getDay(); },\r\n    y: function (date) { return String(date.getFullYear()).substring(2); },\r\n};\n\nfunction FlatpickrInstance(element, instanceConfig) {\r\n    var self = {};\r\n    self.parseDate = parseDate;\r\n    self.formatDate = formatDate;\r\n    self._animationLoop = [];\r\n    self._handlers = [];\r\n    self._bind = bind;\r\n    self._setHoursFromDate = setHoursFromDate;\r\n    self.changeMonth = changeMonth;\r\n    self.changeYear = changeYear;\r\n    self.clear = clear;\r\n    self.close = close;\r\n    self._createElement = createElement;\r\n    self.destroy = destroy;\r\n    self.isEnabled = isEnabled;\r\n    self.jumpToDate = jumpToDate;\r\n    self.open = open;\r\n    self.redraw = redraw;\r\n    self.set = set;\r\n    self.setDate = setDate;\r\n    self.toggle = toggle;\r\n    function setupHelperFunctions() {\r\n        self.utils = {\r\n            getDaysInMonth: function (month, yr) {\r\n                if (month === void 0) { month = self.currentMonth; }\r\n                if (yr === void 0) { yr = self.currentYear; }\r\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\r\n                    return 29;\r\n                return self.l10n.daysInMonth[month];\r\n            },\r\n        };\r\n    }\r\n    function init() {\r\n        self.element = self.input = element;\r\n        self.isOpen = false;\r\n        parseConfig();\r\n        setupLocale();\r\n        setupInputs();\r\n        setupDates();\r\n        setupHelperFunctions();\r\n        if (!self.isMobile)\r\n            build();\r\n        bindEvents();\r\n        if (self.selectedDates.length || self.config.noCalendar) {\r\n            if (self.config.enableTime) {\r\n                setHoursFromDate(self.config.noCalendar\r\n                    ? self.latestSelectedDateObj || self.config.minDate\r\n                    : undefined);\r\n            }\r\n            updateValue(false);\r\n        }\r\n        self.showTimeInput =\r\n            self.selectedDates.length > 0 || self.config.noCalendar;\r\n        if (self.weekWrapper !== undefined && self.daysContainer !== undefined) {\r\n            self.calendarContainer.style.width =\r\n                self.daysContainer.offsetWidth + self.weekWrapper.offsetWidth + \"px\";\r\n        }\r\n        if (!self.isMobile)\r\n            positionCalendar();\r\n        triggerEvent(\"onReady\");\r\n    }\r\n    function bindToInstance(fn) {\r\n        return fn.bind(self);\r\n    }\r\n    function updateTime(e) {\r\n        if (self.config.noCalendar && !self.selectedDates.length) {\r\n            self.setDate(new Date().setHours(self.config.defaultHour, self.config.defaultMinute, self.config.defaultSeconds), false);\r\n            setHoursFromInputs();\r\n            updateValue();\r\n        }\r\n        timeWrapper(e);\r\n        if (self.selectedDates.length === 0)\r\n            return;\r\n        if (!self.minDateHasTime ||\r\n            e.type !== \"input\" ||\r\n            e.target.value.length >= 2) {\r\n            setHoursFromInputs();\r\n            updateValue();\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                setHoursFromInputs();\r\n                updateValue();\r\n            }, 1000);\r\n        }\r\n    }\r\n    function ampm2military(hour, amPM) {\r\n        return hour % 12 + 12 * int(amPM === \"PM\");\r\n    }\r\n    function military2ampm(hour) {\r\n        switch (hour % 24) {\r\n            case 0:\r\n            case 12:\r\n                return 12;\r\n            default:\r\n                return hour % 12;\r\n        }\r\n    }\r\n    function setHoursFromInputs() {\r\n        if (self.hourElement === undefined || self.minuteElement === undefined)\r\n            return;\r\n        var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\r\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\r\n            : 0;\r\n        if (self.amPM !== undefined)\r\n            hours = ampm2military(hours, self.amPM.textContent);\r\n        if (self.config.minDate &&\r\n            self.minDateHasTime &&\r\n            self.latestSelectedDateObj &&\r\n            compareDates(self.latestSelectedDateObj, self.config.minDate) === 0) {\r\n            hours = Math.max(hours, self.config.minDate.getHours());\r\n            if (hours === self.config.minDate.getHours())\r\n                minutes = Math.max(minutes, self.config.minDate.getMinutes());\r\n        }\r\n        if (self.config.maxDate &&\r\n            self.maxDateHasTime &&\r\n            self.latestSelectedDateObj &&\r\n            compareDates(self.latestSelectedDateObj, self.config.maxDate) === 0) {\r\n            hours = Math.min(hours, self.config.maxDate.getHours());\r\n            if (hours === self.config.maxDate.getHours())\r\n                minutes = Math.min(minutes, self.config.maxDate.getMinutes());\r\n        }\r\n        setHours(hours, minutes, seconds);\r\n    }\r\n    function setHoursFromDate(dateObj) {\r\n        var date = dateObj || self.latestSelectedDateObj;\r\n        if (date)\r\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\r\n    }\r\n    function setHours(hours, minutes, seconds) {\r\n        if (self.latestSelectedDateObj !== undefined) {\r\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\r\n        }\r\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\r\n            return;\r\n        self.hourElement.value = pad(!self.config.time_24hr\r\n            ? (12 + hours) % 12 + 12 * int(hours % 12 === 0)\r\n            : hours);\r\n        self.minuteElement.value = pad(minutes);\r\n        if (self.amPM !== undefined)\r\n            self.amPM.textContent = hours >= 12 ? \"PM\" : \"AM\";\r\n        if (self.secondElement !== undefined)\r\n            self.secondElement.value = pad(seconds);\r\n    }\r\n    function onYearInput(event) {\r\n        var year = parseInt(event.target.value) + (event.delta || 0);\r\n        if (year.toString().length === 4 || event.key === \"Enter\") {\r\n            self.currentYearElement.blur();\r\n            if (!/[^\\d]/.test(year.toString()))\r\n                changeYear(year);\r\n        }\r\n    }\r\n    function bind(element, event, handler) {\r\n        if (event instanceof Array)\r\n            return event.forEach(function (ev) { return bind(element, ev, handler); });\r\n        if (element instanceof Array)\r\n            return element.forEach(function (el) { return bind(el, event, handler); });\r\n        element.addEventListener(event, handler);\r\n        self._handlers.push({ element: element, event: event, handler: handler });\r\n    }\r\n    function onClick(handler) {\r\n        return function (evt) { return evt.which === 1 && handler(evt); };\r\n    }\r\n    function triggerChange() {\r\n        triggerEvent(\"onChange\");\r\n    }\r\n    function bindEvents() {\r\n        if (self.config.wrap) {\r\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach(function (evt) {\r\n                Array.prototype.forEach.call(self.element.querySelectorAll(\"[data-\" + evt + \"]\"), function (el) {\r\n                    return bind(el, \"click\", self[evt]);\r\n                });\r\n            });\r\n        }\r\n        if (self.isMobile) {\r\n            setupMobile();\r\n            return;\r\n        }\r\n        var debouncedResize = debounce(onResize, 50);\r\n        self._debouncedChange = debounce(triggerChange, 300);\r\n        if (self.config.mode === \"range\" && self.daysContainer)\r\n            bind(self.daysContainer, \"mouseover\", function (e) {\r\n                return onMouseOver(e.target);\r\n            });\r\n        bind(window.document.body, \"keydown\", onKeyDown);\r\n        if (!self.config.static)\r\n            bind(self._input, \"keydown\", onKeyDown);\r\n        if (!self.config.inline && !self.config.static)\r\n            bind(window, \"resize\", debouncedResize);\r\n        if (window.ontouchstart !== undefined)\r\n            bind(window.document.body, \"touchstart\", documentClick);\r\n        bind(window.document.body, \"mousedown\", onClick(documentClick));\r\n        bind(self._input, \"blur\", documentClick);\r\n        if (self.config.clickOpens === true) {\r\n            bind(self._input, \"focus\", self.open);\r\n            bind(self._input, \"mousedown\", onClick(self.open));\r\n        }\r\n        if (self.daysContainer !== undefined) {\r\n            self.monthNav.addEventListener(\"wheel\", function (e) { return e.preventDefault(); });\r\n            bind(self.monthNav, \"wheel\", debounce(onMonthNavScroll, 10));\r\n            bind(self.monthNav, \"mousedown\", onClick(onMonthNavClick));\r\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\r\n            bind(self.daysContainer, \"mousedown\", onClick(selectDate));\r\n            if (self.config.animate) {\r\n                bind(self.daysContainer, [\"webkitAnimationEnd\", \"animationend\"], animateDays);\r\n                bind(self.monthNav, [\"webkitAnimationEnd\", \"animationend\"], animateMonths);\r\n            }\r\n        }\r\n        if (self.timeContainer !== undefined &&\r\n            self.minuteElement !== undefined &&\r\n            self.hourElement !== undefined) {\r\n            var selText = function (e) {\r\n                return e.target.select();\r\n            };\r\n            bind(self.timeContainer, [\"wheel\", \"input\", \"increment\"], updateTime);\r\n            bind(self.timeContainer, \"mousedown\", onClick(timeIncrement));\r\n            bind(self.timeContainer, [\"wheel\", \"increment\"], self._debouncedChange);\r\n            bind(self.timeContainer, \"input\", triggerChange);\r\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\r\n            if (self.secondElement !== undefined)\r\n                bind(self.secondElement, \"focus\", function () { return self.secondElement && self.secondElement.select(); });\r\n            if (self.amPM !== undefined) {\r\n                bind(self.amPM, \"mousedown\", onClick(function (e) {\r\n                    updateTime(e);\r\n                    triggerChange();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    function processPostDayAnimation() {\r\n        self._animationLoop.forEach(function (f) { return f(); });\r\n        self._animationLoop = [];\r\n    }\r\n    function animateDays(e) {\r\n        if (self.daysContainer && self.daysContainer.childNodes.length > 1) {\r\n            switch (e.animationName) {\r\n                case \"fpSlideLeft\":\r\n                    self.daysContainer.lastChild &&\r\n                        self.daysContainer.lastChild.classList.remove(\"slideLeftNew\");\r\n                    self.daysContainer.removeChild(self.daysContainer\r\n                        .firstChild);\r\n                    self.days = self.daysContainer.firstChild;\r\n                    processPostDayAnimation();\r\n                    break;\r\n                case \"fpSlideRight\":\r\n                    self.daysContainer.firstChild &&\r\n                        self.daysContainer.firstChild.classList.remove(\"slideRightNew\");\r\n                    self.daysContainer.removeChild(self.daysContainer\r\n                        .lastChild);\r\n                    self.days = self.daysContainer.firstChild;\r\n                    processPostDayAnimation();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    function animateMonths(e) {\r\n        switch (e.animationName) {\r\n            case \"fpSlideLeftNew\":\r\n            case \"fpSlideRightNew\":\r\n                self.navigationCurrentMonth.classList.remove(\"slideLeftNew\");\r\n                self.navigationCurrentMonth.classList.remove(\"slideRightNew\");\r\n                var nav = self.navigationCurrentMonth;\r\n                while (nav.nextSibling &&\r\n                    /curr/.test(nav.nextSibling.className))\r\n                    self.monthNav.removeChild(nav.nextSibling);\r\n                while (nav.previousSibling &&\r\n                    /curr/.test(nav.previousSibling.className))\r\n                    self.monthNav.removeChild(nav.previousSibling);\r\n                self.oldCurMonth = undefined;\r\n                break;\r\n        }\r\n    }\r\n    function jumpToDate(jumpDate) {\r\n        var jumpTo = jumpDate !== undefined\r\n            ? parseDate(jumpDate)\r\n            : self.latestSelectedDateObj ||\r\n                (self.config.minDate && self.config.minDate > self.now\r\n                    ? self.config.minDate\r\n                    : self.config.maxDate && self.config.maxDate < self.now\r\n                        ? self.config.maxDate\r\n                        : self.now);\r\n        try {\r\n            if (jumpTo !== undefined) {\r\n                self.currentYear = jumpTo.getFullYear();\r\n                self.currentMonth = jumpTo.getMonth();\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(e.stack);\r\n            console.warn(\"Invalid date supplied: \" + jumpTo);\r\n        }\r\n        self.redraw();\r\n    }\r\n    function timeIncrement(e) {\r\n        if (~e.target.className.indexOf(\"arrow\"))\r\n            incrementNumInput(e, e.target.classList.contains(\"arrowUp\") ? 1 : -1);\r\n    }\r\n    function incrementNumInput(e, delta, inputElem) {\r\n        var target = e && e.target;\r\n        var input = inputElem ||\r\n            (target && target.parentNode && target.parentNode.firstChild);\r\n        var event = createEvent(\"increment\");\r\n        event.delta = delta;\r\n        input && input.dispatchEvent(event);\r\n    }\r\n    function build() {\r\n        var fragment = window.document.createDocumentFragment();\r\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\r\n        self.calendarContainer.tabIndex = -1;\r\n        if (!self.config.noCalendar) {\r\n            fragment.appendChild(buildMonthNav());\r\n            self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\r\n            if (self.config.weekNumbers) {\r\n                var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\r\n                self.innerContainer.appendChild(weekWrapper);\r\n                self.weekNumbers = weekNumbers;\r\n                self.weekWrapper = weekWrapper;\r\n            }\r\n            self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\r\n            self.rContainer.appendChild(buildWeekdays());\r\n            if (!self.daysContainer) {\r\n                self.daysContainer = createElement(\"div\", \"flatpickr-days\");\r\n                self.daysContainer.tabIndex = -1;\r\n            }\r\n            buildDays();\r\n            self.rContainer.appendChild(self.daysContainer);\r\n            self.innerContainer.appendChild(self.rContainer);\r\n            fragment.appendChild(self.innerContainer);\r\n        }\r\n        if (self.config.enableTime) {\r\n            fragment.appendChild(buildTime());\r\n        }\r\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\r\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate);\r\n        self.calendarContainer.appendChild(fragment);\r\n        var customAppend = self.config.appendTo !== undefined && self.config.appendTo.nodeType;\r\n        if (self.config.inline || self.config.static) {\r\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\r\n            if (self.config.inline && !customAppend && self.element.parentNode) {\r\n                self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\r\n            }\r\n            if (self.config.static) {\r\n                var wrapper = createElement(\"div\", \"flatpickr-wrapper\");\r\n                if (self.element.parentNode)\r\n                    self.element.parentNode.insertBefore(wrapper, self.element);\r\n                wrapper.appendChild(self.element);\r\n                if (self.altInput)\r\n                    wrapper.appendChild(self.altInput);\r\n                wrapper.appendChild(self.calendarContainer);\r\n            }\r\n        }\r\n        if (!self.config.static && !self.config.inline)\r\n            (self.config.appendTo !== undefined\r\n                ? self.config.appendTo\r\n                : window.document.body).appendChild(self.calendarContainer);\r\n    }\r\n    function createDay(className, date, dayNumber, i) {\r\n        var dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\r\n        dayElement.dateObj = date;\r\n        dayElement.$i = i;\r\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\r\n        if (compareDates(date, self.now) === 0) {\r\n            self.todayDateElem = dayElement;\r\n            dayElement.classList.add(\"today\");\r\n        }\r\n        if (dateIsEnabled) {\r\n            dayElement.tabIndex = -1;\r\n            if (isDateSelected(date)) {\r\n                dayElement.classList.add(\"selected\");\r\n                self.selectedDateElem = dayElement;\r\n                if (self.config.mode === \"range\") {\r\n                    toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\r\n                        compareDates(date, self.selectedDates[0]) === 0);\r\n                    toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\r\n                        compareDates(date, self.selectedDates[1]) === 0);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            dayElement.classList.add(\"disabled\");\r\n            if (self.selectedDates[0] &&\r\n                self.minRangeDate &&\r\n                date > self.minRangeDate &&\r\n                date < self.selectedDates[0])\r\n                self.minRangeDate = date;\r\n            else if (self.selectedDates[0] &&\r\n                self.maxRangeDate &&\r\n                date < self.maxRangeDate &&\r\n                date > self.selectedDates[0])\r\n                self.maxRangeDate = date;\r\n        }\r\n        if (self.config.mode === \"range\") {\r\n            if (isDateInRange(date) && !isDateSelected(date))\r\n                dayElement.classList.add(\"inRange\");\r\n            if (self.selectedDates.length === 1 &&\r\n                self.minRangeDate !== undefined &&\r\n                self.maxRangeDate !== undefined &&\r\n                (date < self.minRangeDate || date > self.maxRangeDate))\r\n                dayElement.classList.add(\"notAllowed\");\r\n        }\r\n        if (self.weekNumbers &&\r\n            className !== \"prevMonthDay\" &&\r\n            dayNumber % 7 === 1) {\r\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='disabled flatpickr-day'>\" +\r\n                self.config.getWeek(date) +\r\n                \"</span>\");\r\n        }\r\n        triggerEvent(\"onDayCreate\", dayElement);\r\n        return dayElement;\r\n    }\r\n    function focusOnDay(currentIndex, offset) {\r\n        var newIndex = currentIndex + offset || 0, targetNode = (currentIndex !== undefined\r\n            ? self.days.childNodes[newIndex]\r\n            : self.selectedDateElem ||\r\n                self.todayDateElem ||\r\n                self.days.childNodes[0]);\r\n        var focus = function () {\r\n            targetNode = targetNode || self.days.childNodes[newIndex];\r\n            targetNode.focus();\r\n            if (self.config.mode === \"range\")\r\n                onMouseOver(targetNode);\r\n        };\r\n        if (targetNode === undefined && offset !== 0) {\r\n            if (offset > 0) {\r\n                self.changeMonth(1, true, undefined, true);\r\n                newIndex = newIndex % 42;\r\n            }\r\n            else if (offset < 0) {\r\n                self.changeMonth(-1, true, undefined, true);\r\n                newIndex += 42;\r\n            }\r\n            return afterDayAnim(focus);\r\n        }\r\n        focus();\r\n    }\r\n    function afterDayAnim(fn) {\r\n        self.config.animate === true ? self._animationLoop.push(fn) : fn();\r\n    }\r\n    function buildDays(delta) {\r\n        if (self.daysContainer === undefined) {\r\n            return;\r\n        }\r\n        var firstOfMonth = (new Date(self.currentYear, self.currentMonth, 1).getDay() -\r\n            self.l10n.firstDayOfWeek +\r\n            7) %\r\n            7, isRangeMode = self.config.mode === \"range\";\r\n        var prevMonthDays = self.utils.getDaysInMonth((self.currentMonth - 1 + 12) % 12);\r\n        var daysInMonth = self.utils.getDaysInMonth(), days = window.document.createDocumentFragment();\r\n        var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\r\n        if (self.weekNumbers && self.weekNumbers.firstChild)\r\n            self.weekNumbers.textContent = \"\";\r\n        if (isRangeMode) {\r\n            self.minRangeDate = new Date(self.currentYear, self.currentMonth - 1, dayNumber);\r\n            self.maxRangeDate = new Date(self.currentYear, self.currentMonth + 1, (42 - firstOfMonth) % daysInMonth);\r\n        }\r\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\r\n            days.appendChild(createDay(\"prevMonthDay\", new Date(self.currentYear, self.currentMonth - 1, dayNumber), dayNumber, dayIndex));\r\n        }\r\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\r\n            days.appendChild(createDay(\"\", new Date(self.currentYear, self.currentMonth, dayNumber), dayNumber, dayIndex));\r\n        }\r\n        for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth; dayNum++, dayIndex++) {\r\n            days.appendChild(createDay(\"nextMonthDay\", new Date(self.currentYear, self.currentMonth + 1, dayNum % daysInMonth), dayNum, dayIndex));\r\n        }\r\n        if (isRangeMode && self.selectedDates.length === 1 && days.childNodes[0]) {\r\n            self._hidePrevMonthArrow =\r\n                self._hidePrevMonthArrow ||\r\n                    (!!self.minRangeDate &&\r\n                        self.minRangeDate > days.childNodes[0].dateObj);\r\n            self._hideNextMonthArrow =\r\n                self._hideNextMonthArrow ||\r\n                    (!!self.maxRangeDate &&\r\n                        self.maxRangeDate <\r\n                            new Date(self.currentYear, self.currentMonth + 1, 1));\r\n        }\r\n        else\r\n            updateNavigationCurrentMonth();\r\n        var dayContainer = createElement(\"div\", \"dayContainer\");\r\n        dayContainer.appendChild(days);\r\n        if (!self.config.animate || delta === undefined)\r\n            clearNode(self.daysContainer);\r\n        else {\r\n            while (self.daysContainer.childNodes.length > 1)\r\n                self.daysContainer.removeChild(self.daysContainer.firstChild);\r\n        }\r\n        if (delta && delta >= 0)\r\n            self.daysContainer.appendChild(dayContainer);\r\n        else\r\n            self.daysContainer.insertBefore(dayContainer, self.daysContainer.firstChild);\r\n        self.days = self.daysContainer.childNodes[0];\r\n    }\r\n    function buildMonthNav() {\r\n        var monthNavFragment = window.document.createDocumentFragment();\r\n        self.monthNav = createElement(\"div\", \"flatpickr-month\");\r\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\r\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\r\n        self.currentMonthElement = createElement(\"span\", \"cur-month\");\r\n        self.currentMonthElement.title = self.l10n.scrollTitle;\r\n        var yearInput = createNumberInput(\"cur-year\");\r\n        self.currentYearElement = yearInput.childNodes[0];\r\n        self.currentYearElement.title = self.l10n.scrollTitle;\r\n        if (self.config.minDate)\r\n            self.currentYearElement.min = self.config.minDate\r\n                .getFullYear()\r\n                .toString();\r\n        if (self.config.maxDate) {\r\n            self.currentYearElement.max = self.config.maxDate\r\n                .getFullYear()\r\n                .toString();\r\n            self.currentYearElement.disabled =\r\n                !!self.config.minDate &&\r\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\r\n        }\r\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\r\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\r\n        self.navigationCurrentMonth = createElement(\"span\", \"flatpickr-current-month\");\r\n        self.navigationCurrentMonth.appendChild(self.currentMonthElement);\r\n        self.navigationCurrentMonth.appendChild(yearInput);\r\n        monthNavFragment.appendChild(self.prevMonthNav);\r\n        monthNavFragment.appendChild(self.navigationCurrentMonth);\r\n        monthNavFragment.appendChild(self.nextMonthNav);\r\n        self.monthNav.appendChild(monthNavFragment);\r\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\r\n            get: function () { return self.__hidePrevMonthArrow; },\r\n            set: function (bool) {\r\n                if (self.__hidePrevMonthArrow !== bool)\r\n                    self.prevMonthNav.style.display = bool ? \"none\" : \"block\";\r\n                self.__hidePrevMonthArrow = bool;\r\n            },\r\n        });\r\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\r\n            get: function () { return self.__hideNextMonthArrow; },\r\n            set: function (bool) {\r\n                if (self.__hideNextMonthArrow !== bool)\r\n                    self.nextMonthNav.style.display = bool ? \"none\" : \"block\";\r\n                self.__hideNextMonthArrow = bool;\r\n            },\r\n        });\r\n        updateNavigationCurrentMonth();\r\n        return self.monthNav;\r\n    }\r\n    function buildTime() {\r\n        self.calendarContainer.classList.add(\"hasTime\");\r\n        if (self.config.noCalendar)\r\n            self.calendarContainer.classList.add(\"noCalendar\");\r\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\r\n        self.timeContainer.tabIndex = -1;\r\n        var separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\r\n        var hourInput = createNumberInput(\"flatpickr-hour\");\r\n        self.hourElement = hourInput.childNodes[0];\r\n        var minuteInput = createNumberInput(\"flatpickr-minute\");\r\n        self.minuteElement = minuteInput.childNodes[0];\r\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\r\n        self.hourElement.value = pad(self.latestSelectedDateObj\r\n            ? self.latestSelectedDateObj.getHours()\r\n            : self.config.time_24hr\r\n                ? self.config.defaultHour\r\n                : military2ampm(self.config.defaultHour));\r\n        self.minuteElement.value = pad(self.latestSelectedDateObj\r\n            ? self.latestSelectedDateObj.getMinutes()\r\n            : self.config.defaultMinute);\r\n        self.hourElement.step = self.config.hourIncrement.toString();\r\n        self.minuteElement.step = self.config.minuteIncrement.toString();\r\n        self.hourElement.min = self.config.time_24hr ? \"0\" : \"1\";\r\n        self.hourElement.max = self.config.time_24hr ? \"23\" : \"12\";\r\n        self.minuteElement.min = \"0\";\r\n        self.minuteElement.max = \"59\";\r\n        self.hourElement.title = self.minuteElement.title = self.l10n.scrollTitle;\r\n        self.timeContainer.appendChild(hourInput);\r\n        self.timeContainer.appendChild(separator);\r\n        self.timeContainer.appendChild(minuteInput);\r\n        if (self.config.time_24hr)\r\n            self.timeContainer.classList.add(\"time24hr\");\r\n        if (self.config.enableSeconds) {\r\n            self.timeContainer.classList.add(\"hasSeconds\");\r\n            var secondInput = createNumberInput(\"flatpickr-second\");\r\n            self.secondElement = secondInput.childNodes[0];\r\n            self.secondElement.value = pad(self.latestSelectedDateObj\r\n                ? self.latestSelectedDateObj.getSeconds()\r\n                : self.config.defaultSeconds);\r\n            self.secondElement.step = self.minuteElement.step;\r\n            self.secondElement.min = self.minuteElement.min;\r\n            self.secondElement.max = self.minuteElement.max;\r\n            self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\r\n            self.timeContainer.appendChild(secondInput);\r\n        }\r\n        if (!self.config.time_24hr) {\r\n            self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\r\n                ? self.hourElement.value\r\n                : self.config.defaultHour) > 11)]);\r\n            self.amPM.title = self.l10n.toggleTitle;\r\n            self.amPM.tabIndex = -1;\r\n            self.timeContainer.appendChild(self.amPM);\r\n        }\r\n        return self.timeContainer;\r\n    }\r\n    function buildWeekdays() {\r\n        if (!self.weekdayContainer)\r\n            self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\r\n        var firstDayOfWeek = self.l10n.firstDayOfWeek;\r\n        var weekdays = self.l10n.weekdays.shorthand.slice();\r\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\r\n            weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));\r\n        }\r\n        self.weekdayContainer.innerHTML = \"\\n    <span class=flatpickr-weekday>\\n      \" + weekdays.join(\"</span><span class=flatpickr-weekday>\") + \"\\n    </span>\\n    \";\r\n        return self.weekdayContainer;\r\n    }\r\n    function buildWeeks() {\r\n        self.calendarContainer.classList.add(\"hasWeeks\");\r\n        var weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\r\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\r\n        var weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\r\n        weekWrapper.appendChild(weekNumbers);\r\n        return {\r\n            weekWrapper: weekWrapper,\r\n            weekNumbers: weekNumbers,\r\n        };\r\n    }\r\n    function changeMonth(value, is_offset, animate, from_keyboard) {\r\n        if (is_offset === void 0) { is_offset = true; }\r\n        if (animate === void 0) { animate = self.config.animate; }\r\n        if (from_keyboard === void 0) { from_keyboard = false; }\r\n        var delta = is_offset ? value : value - self.currentMonth;\r\n        if ((delta < 0 && self._hidePrevMonthArrow) ||\r\n            (delta > 0 && self._hideNextMonthArrow))\r\n            return;\r\n        self.currentMonth += delta;\r\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\r\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\r\n            self.currentMonth = (self.currentMonth + 12) % 12;\r\n            triggerEvent(\"onYearChange\");\r\n        }\r\n        buildDays(animate ? delta : undefined);\r\n        if (!animate) {\r\n            triggerEvent(\"onMonthChange\");\r\n            return updateNavigationCurrentMonth();\r\n        }\r\n        var nav = self.navigationCurrentMonth;\r\n        if (delta < 0) {\r\n            while (nav.nextSibling &&\r\n                /curr/.test(nav.nextSibling.className))\r\n                self.monthNav.removeChild(nav.nextSibling);\r\n        }\r\n        else if (delta > 0) {\r\n            while (nav.previousSibling &&\r\n                /curr/.test(nav.previousSibling.className))\r\n                self.monthNav.removeChild(nav.previousSibling);\r\n        }\r\n        self.oldCurMonth = self.navigationCurrentMonth;\r\n        self.navigationCurrentMonth = self.monthNav.insertBefore(self.oldCurMonth.cloneNode(true), delta > 0 ? self.oldCurMonth.nextSibling : self.oldCurMonth);\r\n        var daysContainer = self.daysContainer;\r\n        if (daysContainer.firstChild && daysContainer.lastChild) {\r\n            if (delta > 0) {\r\n                daysContainer.firstChild.classList.add(\"slideLeft\");\r\n                daysContainer.lastChild.classList.add(\"slideLeftNew\");\r\n                self.oldCurMonth.classList.add(\"slideLeft\");\r\n                self.navigationCurrentMonth.classList.add(\"slideLeftNew\");\r\n            }\r\n            else if (delta < 0) {\r\n                daysContainer.firstChild.classList.add(\"slideRightNew\");\r\n                daysContainer.lastChild.classList.add(\"slideRight\");\r\n                self.oldCurMonth.classList.add(\"slideRight\");\r\n                self.navigationCurrentMonth.classList.add(\"slideRightNew\");\r\n            }\r\n        }\r\n        self.currentMonthElement = self.navigationCurrentMonth\r\n            .firstChild;\r\n        self.currentYearElement = self.navigationCurrentMonth.lastChild\r\n            .childNodes[0];\r\n        updateNavigationCurrentMonth();\r\n        if (self.oldCurMonth.firstChild)\r\n            self.oldCurMonth.firstChild.textContent = monthToStr(self.currentMonth - delta, self.config.shorthandCurrentMonth, self.l10n);\r\n        triggerEvent(\"onMonthChange\");\r\n        if (from_keyboard &&\r\n            document.activeElement &&\r\n            document.activeElement.$i) {\r\n            var index_1 = document.activeElement.$i;\r\n            afterDayAnim(function () {\r\n                focusOnDay(index_1, 0);\r\n            });\r\n        }\r\n    }\r\n    function clear(triggerChangeEvent) {\r\n        if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }\r\n        self.input.value = \"\";\r\n        if (self.altInput)\r\n            self.altInput.value = \"\";\r\n        if (self.mobileInput)\r\n            self.mobileInput.value = \"\";\r\n        self.selectedDates = [];\r\n        self.latestSelectedDateObj = undefined;\r\n        self.showTimeInput = false;\r\n        self.redraw();\r\n        if (triggerChangeEvent === true)\r\n            triggerEvent(\"onChange\");\r\n    }\r\n    function close() {\r\n        self.isOpen = false;\r\n        if (!self.isMobile) {\r\n            self.calendarContainer.classList.remove(\"open\");\r\n            self._input.classList.remove(\"active\");\r\n        }\r\n        triggerEvent(\"onClose\");\r\n    }\r\n    function destroy() {\r\n        if (self.config !== undefined)\r\n            triggerEvent(\"onDestroy\");\r\n        for (var i = self._handlers.length; i--;) {\r\n            var h = self._handlers[i];\r\n            h.element.removeEventListener(h.event, h.handler);\r\n        }\r\n        self._handlers = [];\r\n        if (self.mobileInput) {\r\n            if (self.mobileInput.parentNode)\r\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\r\n            self.mobileInput = undefined;\r\n        }\r\n        else if (self.calendarContainer && self.calendarContainer.parentNode)\r\n            self.calendarContainer.parentNode.removeChild(self.calendarContainer);\r\n        if (self.altInput) {\r\n            self.input.type = \"text\";\r\n            if (self.altInput.parentNode)\r\n                self.altInput.parentNode.removeChild(self.altInput);\r\n            delete self.altInput;\r\n        }\r\n        if (self.input) {\r\n            self.input.type = self.input._type;\r\n            self.input.classList.remove(\"flatpickr-input\");\r\n            self.input.removeAttribute(\"readonly\");\r\n            self.input.value = \"\";\r\n        }\r\n        [\r\n            \"_showTimeInput\",\r\n            \"latestSelectedDateObj\",\r\n            \"_hideNextMonthArrow\",\r\n            \"_hidePrevMonthArrow\",\r\n            \"__hideNextMonthArrow\",\r\n            \"__hidePrevMonthArrow\",\r\n            \"isMobile\",\r\n            \"isOpen\",\r\n            \"selectedDateElem\",\r\n            \"minDateHasTime\",\r\n            \"maxDateHasTime\",\r\n            \"days\",\r\n            \"daysContainer\",\r\n            \"_input\",\r\n            \"_positionElement\",\r\n            \"innerContainer\",\r\n            \"rContainer\",\r\n            \"monthNav\",\r\n            \"todayDateElem\",\r\n            \"calendarContainer\",\r\n            \"weekdayContainer\",\r\n            \"prevMonthNav\",\r\n            \"nextMonthNav\",\r\n            \"currentMonthElement\",\r\n            \"currentYearElement\",\r\n            \"navigationCurrentMonth\",\r\n            \"selectedDateElem\",\r\n            \"config\",\r\n        ].forEach(function (k) {\r\n            try {\r\n                delete self[k];\r\n            }\r\n            catch (_) { }\r\n        });\r\n    }\r\n    function isCalendarElem(elem) {\r\n        if (self.config.appendTo && self.config.appendTo.contains(elem))\r\n            return true;\r\n        return self.calendarContainer.contains(elem);\r\n    }\r\n    function documentClick(e) {\r\n        if (self.isOpen && !self.config.inline) {\r\n            var isCalendarElement = isCalendarElem(e.target);\r\n            var isInput = e.target === self.input ||\r\n                e.target === self.altInput ||\r\n                self.element.contains(e.target) ||\r\n                (e.path &&\r\n                    e.path.indexOf &&\r\n                    (~e.path.indexOf(self.input) ||\r\n                        ~e.path.indexOf(self.altInput)));\r\n            var lostFocus = e.type === \"blur\"\r\n                ? isInput &&\r\n                    e.relatedTarget &&\r\n                    !isCalendarElem(e.relatedTarget)\r\n                : !isInput && !isCalendarElement;\r\n            if (lostFocus &&\r\n                self.config.ignoredFocusElements.indexOf(e.target) === -1) {\r\n                self.close();\r\n                if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\r\n                    self.clear(false);\r\n                    self.redraw();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function changeYear(newYear) {\r\n        if (!newYear ||\r\n            (self.currentYearElement.min &&\r\n                newYear < parseInt(self.currentYearElement.min)) ||\r\n            (self.currentYearElement.max &&\r\n                newYear > parseInt(self.currentYearElement.max)))\r\n            return;\r\n        var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\r\n        self.currentYear = newYearNum || self.currentYear;\r\n        if (self.config.maxDate &&\r\n            self.currentYear === self.config.maxDate.getFullYear()) {\r\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\r\n        }\r\n        else if (self.config.minDate &&\r\n            self.currentYear === self.config.minDate.getFullYear()) {\r\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\r\n        }\r\n        if (isNewYear) {\r\n            self.redraw();\r\n            triggerEvent(\"onYearChange\");\r\n        }\r\n    }\r\n    function isEnabled(date, timeless) {\r\n        if (timeless === void 0) { timeless = true; }\r\n        var dateToCheck = self.parseDate(date, undefined, timeless);\r\n        if ((self.config.minDate &&\r\n            dateToCheck &&\r\n            compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\r\n            (self.config.maxDate &&\r\n                dateToCheck &&\r\n                compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\r\n            return false;\r\n        if (!self.config.enable.length && !self.config.disable.length)\r\n            return true;\r\n        if (dateToCheck === undefined)\r\n            return false;\r\n        var bool = self.config.enable.length > 0, array = bool ? self.config.enable : self.config.disable;\r\n        for (var i = 0, d = void 0; i < array.length; i++) {\r\n            d = array[i];\r\n            if (typeof d === \"function\" &&\r\n                d(dateToCheck))\r\n                return bool;\r\n            else if (d instanceof Date &&\r\n                dateToCheck !== undefined &&\r\n                d.getTime() === dateToCheck.getTime())\r\n                return bool;\r\n            else if (typeof d === \"string\" && dateToCheck !== undefined) {\r\n                var parsed = self.parseDate(d, undefined, true);\r\n                return parsed && parsed.getTime() === dateToCheck.getTime()\r\n                    ? bool\r\n                    : !bool;\r\n            }\r\n            else if (typeof d === \"object\" &&\r\n                dateToCheck !== undefined &&\r\n                d.from &&\r\n                d.to &&\r\n                dateToCheck.getTime() >= d.from.getTime() &&\r\n                dateToCheck.getTime() <= d.to.getTime())\r\n                return bool;\r\n        }\r\n        return !bool;\r\n    }\r\n    function onKeyDown(e) {\r\n        var isInput = e.target === self._input;\r\n        var calendarElem = isCalendarElem(e.target);\r\n        var allowInput = self.config.allowInput;\r\n        var allowKeydown = self.isOpen && (!allowInput || !isInput);\r\n        var allowInlineKeydown = self.config.inline && isInput && !allowInput;\r\n        if (e.key === \"Enter\" && isInput) {\r\n            if (allowInput) {\r\n                self.setDate(self._input.value, true, e.target === self.altInput\r\n                    ? self.config.altFormat\r\n                    : self.config.dateFormat);\r\n                return e.target.blur();\r\n            }\r\n            else\r\n                self.open();\r\n        }\r\n        else if (calendarElem || allowKeydown || allowInlineKeydown) {\r\n            var isTimeObj = !!self.timeContainer &&\r\n                self.timeContainer.contains(e.target);\r\n            switch (e.key) {\r\n                case \"Enter\":\r\n                    if (isTimeObj)\r\n                        updateValue();\r\n                    else\r\n                        selectDate(e);\r\n                    break;\r\n                case \"Escape\":\r\n                    e.preventDefault();\r\n                    self.close();\r\n                    break;\r\n                case \"Backspace\":\r\n                case \"Delete\":\r\n                    if (isInput && !self.config.allowInput)\r\n                        self.clear();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                case \"ArrowRight\":\r\n                    if (!isTimeObj) {\r\n                        e.preventDefault();\r\n                        if (self.daysContainer) {\r\n                            var delta_1 = e.key === \"ArrowRight\" ? 1 : -1;\r\n                            if (!e.ctrlKey)\r\n                                focusOnDay(e.target.$i, delta_1);\r\n                            else\r\n                                changeMonth(delta_1, true, undefined, true);\r\n                        }\r\n                    }\r\n                    else if (self.hourElement)\r\n                        self.hourElement.focus();\r\n                    break;\r\n                case \"ArrowUp\":\r\n                case \"ArrowDown\":\r\n                    e.preventDefault();\r\n                    var delta = e.key === \"ArrowDown\" ? 1 : -1;\r\n                    if (self.daysContainer && e.target.$i !== undefined) {\r\n                        if (e.ctrlKey) {\r\n                            changeYear(self.currentYear - delta);\r\n                            focusOnDay(e.target.$i, 0);\r\n                        }\r\n                        else if (!isTimeObj)\r\n                            focusOnDay(e.target.$i, delta * 7);\r\n                    }\r\n                    else if (self.config.enableTime) {\r\n                        if (!isTimeObj && self.hourElement)\r\n                            self.hourElement.focus();\r\n                        updateTime(e);\r\n                        self._debouncedChange();\r\n                    }\r\n                    break;\r\n                case \"Tab\":\r\n                    if (e.target === self.hourElement) {\r\n                        e.preventDefault();\r\n                        self.minuteElement.select();\r\n                    }\r\n                    else if (e.target === self.minuteElement &&\r\n                        (self.secondElement || self.amPM)) {\r\n                        e.preventDefault();\r\n                        if (self.secondElement !== undefined)\r\n                            self.secondElement.focus();\r\n                        else if (self.amPM !== undefined)\r\n                            self.amPM.focus();\r\n                    }\r\n                    else if (e.target === self.secondElement && self.amPM) {\r\n                        e.preventDefault();\r\n                        self.amPM.focus();\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (self.amPM !== undefined && e.target === self.amPM) {\r\n                        self.amPM.textContent = \"AM\";\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                    }\r\n                    break;\r\n                case \"p\":\r\n                    if (self.amPM !== undefined && e.target === self.amPM) {\r\n                        self.amPM.textContent = \"PM\";\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            triggerEvent(\"onKeyDown\", e);\r\n        }\r\n    }\r\n    function onMouseOver(elem) {\r\n        if (self.selectedDates.length !== 1 ||\r\n            !elem.classList.contains(\"flatpickr-day\") ||\r\n            self.minRangeDate === undefined ||\r\n            self.maxRangeDate === undefined)\r\n            return;\r\n        var hoverDate = elem.dateObj, initialDate = self.parseDate(self.selectedDates[0], undefined, true), rangeStartDate = Math.min(hoverDate.getTime(), self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate.getTime(), self.selectedDates[0].getTime()), containsDisabled = false;\r\n        for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\r\n            if (!isEnabled(new Date(t))) {\r\n                containsDisabled = true;\r\n                break;\r\n            }\r\n        }\r\n        var _loop_1 = function (timestamp, i) {\r\n            var outOfRange = timestamp < self.minRangeDate.getTime() ||\r\n                timestamp > self.maxRangeDate.getTime(), dayElem = self.days.childNodes[i];\r\n            if (outOfRange) {\r\n                dayElem.classList.add(\"notAllowed\");\r\n                [\"inRange\", \"startRange\", \"endRange\"].forEach(function (c) {\r\n                    dayElem.classList.remove(c);\r\n                });\r\n                return \"continue\";\r\n            }\r\n            else if (containsDisabled && !outOfRange)\r\n                return \"continue\";\r\n            [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach(function (c) {\r\n                dayElem.classList.remove(c);\r\n            });\r\n            var minRangeDate = Math.max(self.minRangeDate.getTime(), rangeStartDate), maxRangeDate = Math.min(self.maxRangeDate.getTime(), rangeEndDate);\r\n            elem.classList.add(hoverDate < self.selectedDates[0] ? \"startRange\" : \"endRange\");\r\n            if (initialDate < hoverDate && timestamp === initialDate.getTime())\r\n                dayElem.classList.add(\"startRange\");\r\n            else if (initialDate > hoverDate && timestamp === initialDate.getTime())\r\n                dayElem.classList.add(\"endRange\");\r\n            if (timestamp >= minRangeDate && timestamp <= maxRangeDate)\r\n                dayElem.classList.add(\"inRange\");\r\n        };\r\n        for (var timestamp = self.days.childNodes[0].dateObj.getTime(), i = 0; i < 42; i++, timestamp += duration.DAY) {\r\n            _loop_1(timestamp, i);\r\n        }\r\n    }\r\n    function onResize() {\r\n        if (self.isOpen && !self.config.static && !self.config.inline)\r\n            positionCalendar();\r\n    }\r\n    function open(e, positionElement) {\r\n        if (positionElement === void 0) { positionElement = self._input; }\r\n        if (self.isMobile) {\r\n            if (e) {\r\n                e.preventDefault();\r\n                e.target && e.target.blur();\r\n            }\r\n            setTimeout(function () {\r\n                self.mobileInput !== undefined && self.mobileInput.click();\r\n            }, 0);\r\n            triggerEvent(\"onOpen\");\r\n            return;\r\n        }\r\n        if (self.isOpen || self._input.disabled || self.config.inline)\r\n            return;\r\n        self.isOpen = true;\r\n        self.calendarContainer.classList.add(\"open\");\r\n        positionCalendar(positionElement);\r\n        self._input.classList.add(\"active\");\r\n        triggerEvent(\"onOpen\");\r\n    }\r\n    function minMaxDateSetter(type) {\r\n        return function (date) {\r\n            var dateObj = (self.config[\"_\" + type + \"Date\"] = self.parseDate(date));\r\n            var inverseDateObj = self.config[\"_\" + (type === \"min\" ? \"max\" : \"min\") + \"Date\"];\r\n            if (dateObj !== undefined) {\r\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\r\n                    dateObj.getHours() > 0 ||\r\n                        dateObj.getMinutes() > 0 ||\r\n                        dateObj.getSeconds() > 0;\r\n            }\r\n            if (self.selectedDates) {\r\n                self.selectedDates = self.selectedDates.filter(function (d) { return isEnabled(d); });\r\n                if (!self.selectedDates.length && type === \"min\")\r\n                    setHoursFromDate(dateObj);\r\n                updateValue();\r\n            }\r\n            if (self.daysContainer) {\r\n                redraw();\r\n                if (dateObj !== undefined)\r\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\r\n                else\r\n                    self.currentYearElement.removeAttribute(type);\r\n                self.currentYearElement.disabled =\r\n                    !!inverseDateObj &&\r\n                        dateObj !== undefined &&\r\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\r\n            }\r\n        };\r\n    }\r\n    function parseConfig() {\r\n        var boolOpts = [\r\n            \"wrap\",\r\n            \"weekNumbers\",\r\n            \"allowInput\",\r\n            \"clickOpens\",\r\n            \"time_24hr\",\r\n            \"enableTime\",\r\n            \"noCalendar\",\r\n            \"altInput\",\r\n            \"shorthandCurrentMonth\",\r\n            \"inline\",\r\n            \"static\",\r\n            \"enableSeconds\",\r\n            \"disableMobile\",\r\n        ];\r\n        var hooks = [\r\n            \"onChange\",\r\n            \"onClose\",\r\n            \"onDayCreate\",\r\n            \"onDestroy\",\r\n            \"onKeyDown\",\r\n            \"onMonthChange\",\r\n            \"onOpen\",\r\n            \"onParseConfig\",\r\n            \"onReady\",\r\n            \"onValueUpdate\",\r\n            \"onYearChange\",\r\n        ];\r\n        self.config = __assign({}, flatpickr.defaultConfig);\r\n        var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));\r\n        var formats$$1 = {};\r\n        Object.defineProperty(self.config, \"enable\", {\r\n            get: function () { return self.config._enable || []; },\r\n            set: function (dates) {\r\n                self.config._enable = parseDateRules(dates);\r\n            },\r\n        });\r\n        Object.defineProperty(self.config, \"disable\", {\r\n            get: function () { return self.config._disable || []; },\r\n            set: function (dates) {\r\n                self.config._disable = parseDateRules(dates);\r\n            },\r\n        });\r\n        if (!userConfig.dateFormat && userConfig.enableTime) {\r\n            formats$$1.dateFormat = userConfig.noCalendar\r\n                ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\r\n                : flatpickr.defaultConfig.dateFormat +\r\n                    \" H:i\" +\r\n                    (userConfig.enableSeconds ? \":S\" : \"\");\r\n        }\r\n        if (userConfig.altInput && userConfig.enableTime && !userConfig.altFormat) {\r\n            formats$$1.altFormat = userConfig.noCalendar\r\n                ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\r\n                : flatpickr.defaultConfig.altFormat +\r\n                    (\" h:i\" + (userConfig.enableSeconds ? \":S\" : \"\") + \" K\");\r\n        }\r\n        Object.defineProperty(self.config, \"minDate\", {\r\n            get: function () { return self.config._minDate; },\r\n            set: minMaxDateSetter(\"min\"),\r\n        });\r\n        Object.defineProperty(self.config, \"maxDate\", {\r\n            get: function () { return self.config._maxDate; },\r\n            set: minMaxDateSetter(\"max\"),\r\n        });\r\n        Object.assign(self.config, formats$$1, userConfig);\r\n        for (var i = 0; i < boolOpts.length; i++)\r\n            self.config[boolOpts[i]] =\r\n                self.config[boolOpts[i]] === true ||\r\n                    self.config[boolOpts[i]] === \"true\";\r\n        for (var i = hooks.length; i--;) {\r\n            if (self.config[hooks[i]] !== undefined) {\r\n                self.config[hooks[i]] = arrayify(self.config[hooks[i]] || []).map(bindToInstance);\r\n            }\r\n        }\r\n        for (var i = 0; i < self.config.plugins.length; i++) {\r\n            var pluginConf = self.config.plugins[i](self) || {};\r\n            for (var key in pluginConf) {\r\n                if (~hooks.indexOf(key)) {\r\n                    self.config[key] = arrayify(pluginConf[key])\r\n                        .map(bindToInstance)\r\n                        .concat(self.config[key]);\r\n                }\r\n                else if (typeof userConfig[key] === \"undefined\")\r\n                    self.config[key] = pluginConf[key];\r\n            }\r\n        }\r\n        self.isMobile =\r\n            !self.config.disableMobile &&\r\n                !self.config.inline &&\r\n                self.config.mode === \"single\" &&\r\n                !self.config.disable.length &&\r\n                !self.config.enable.length &&\r\n                !self.config.weekNumbers &&\r\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n        triggerEvent(\"onParseConfig\");\r\n    }\r\n    function setupLocale() {\r\n        if (typeof self.config.locale !== \"object\" &&\r\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\r\n            console.warn(\"flatpickr: invalid locale \" + self.config.locale);\r\n        self.l10n = __assign({}, flatpickr.l10ns.default, typeof self.config.locale === \"object\"\r\n            ? self.config.locale\r\n            : self.config.locale !== \"default\"\r\n                ? flatpickr.l10ns[self.config.locale]\r\n                : undefined);\r\n    }\r\n    function positionCalendar(positionElement) {\r\n        if (positionElement === void 0) { positionElement = self._positionElement; }\r\n        if (self.calendarContainer === undefined)\r\n            return;\r\n        var calendarHeight = self.calendarContainer.offsetHeight, calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPos === \"above\" ||\r\n            (configPos !== \"below\" &&\r\n                distanceFromBottom < calendarHeight &&\r\n                inputBounds.top > calendarHeight);\r\n        var top = window.pageYOffset +\r\n            inputBounds.top +\r\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\r\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\r\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\r\n        if (self.config.inline)\r\n            return;\r\n        var left = window.pageXOffset + inputBounds.left;\r\n        var right = window.document.body.offsetWidth - inputBounds.right;\r\n        var rightMost = left + calendarWidth > window.document.body.offsetWidth;\r\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\r\n        if (self.config.static)\r\n            return;\r\n        self.calendarContainer.style.top = top + \"px\";\r\n        if (!rightMost) {\r\n            self.calendarContainer.style.left = left + \"px\";\r\n            self.calendarContainer.style.right = \"auto\";\r\n        }\r\n        else {\r\n            self.calendarContainer.style.left = \"auto\";\r\n            self.calendarContainer.style.right = right + \"px\";\r\n        }\r\n    }\r\n    function redraw() {\r\n        if (self.config.noCalendar || self.isMobile)\r\n            return;\r\n        buildWeekdays();\r\n        updateNavigationCurrentMonth();\r\n        buildDays();\r\n    }\r\n    function selectDate(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        var isSelectable = function (day) {\r\n            return day.classList &&\r\n                day.classList.contains(\"flatpickr-day\") &&\r\n                !day.classList.contains(\"disabled\") &&\r\n                !day.classList.contains(\"notAllowed\");\r\n        };\r\n        var t = findParent(e.target, isSelectable);\r\n        if (t === undefined)\r\n            return;\r\n        var target = t;\r\n        var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\r\n        var shouldChangeMonth = selectedDate.getMonth() !== self.currentMonth &&\r\n            self.config.mode !== \"range\";\r\n        self.selectedDateElem = target;\r\n        if (self.config.mode === \"single\")\r\n            self.selectedDates = [selectedDate];\r\n        else if (self.config.mode === \"multiple\") {\r\n            var selectedIndex = isDateSelected(selectedDate);\r\n            if (selectedIndex)\r\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\r\n            else\r\n                self.selectedDates.push(selectedDate);\r\n        }\r\n        else if (self.config.mode === \"range\") {\r\n            if (self.selectedDates.length === 2)\r\n                self.clear();\r\n            self.selectedDates.push(selectedDate);\r\n            if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\r\n                self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\r\n        }\r\n        setHoursFromInputs();\r\n        if (shouldChangeMonth) {\r\n            var isNewYear = self.currentYear !== selectedDate.getFullYear();\r\n            self.currentYear = selectedDate.getFullYear();\r\n            self.currentMonth = selectedDate.getMonth();\r\n            if (isNewYear)\r\n                triggerEvent(\"onYearChange\");\r\n            triggerEvent(\"onMonthChange\");\r\n        }\r\n        buildDays();\r\n        if (self.config.minDate &&\r\n            self.minDateHasTime &&\r\n            self.config.enableTime &&\r\n            compareDates(selectedDate, self.config.minDate) === 0)\r\n            setHoursFromDate(self.config.minDate);\r\n        updateValue();\r\n        if (self.config.enableTime)\r\n            setTimeout(function () { return (self.showTimeInput = true); }, 50);\r\n        if (self.config.mode === \"range\") {\r\n            if (self.selectedDates.length === 1) {\r\n                onMouseOver(target);\r\n                self._hidePrevMonthArrow =\r\n                    self._hidePrevMonthArrow ||\r\n                        (self.minRangeDate !== undefined &&\r\n                            self.minRangeDate >\r\n                                self.days.childNodes[0].dateObj);\r\n                self._hideNextMonthArrow =\r\n                    self._hideNextMonthArrow ||\r\n                        (self.maxRangeDate !== undefined &&\r\n                            self.maxRangeDate <\r\n                                new Date(self.currentYear, self.currentMonth + 1, 1));\r\n            }\r\n            else\r\n                updateNavigationCurrentMonth();\r\n        }\r\n        triggerEvent(\"onChange\");\r\n        if (!shouldChangeMonth)\r\n            focusOnDay(target.$i, 0);\r\n        else\r\n            afterDayAnim(function () { return self.selectedDateElem && self.selectedDateElem.focus(); });\r\n        if (self.hourElement !== undefined)\r\n            setTimeout(function () { return self.hourElement !== undefined && self.hourElement.select(); }, 451);\r\n        if (self.config.closeOnSelect) {\r\n            var single = self.config.mode === \"single\" && !self.config.enableTime;\r\n            var range = self.config.mode === \"range\" &&\r\n                self.selectedDates.length === 2 &&\r\n                !self.config.enableTime;\r\n            if (single || range)\r\n                self.close();\r\n        }\r\n    }\r\n    function set(option, value) {\r\n        if (option !== null && typeof option === \"object\")\r\n            Object.assign(self.config, option);\r\n        else\r\n            self.config[option] = value;\r\n        self.redraw();\r\n        jumpToDate();\r\n    }\r\n    function setSelectedDate(inputDate, format) {\r\n        var dates = [];\r\n        if (inputDate instanceof Array)\r\n            dates = inputDate.map(function (d) { return self.parseDate(d, format); });\r\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\r\n            dates = [self.parseDate(inputDate, format)];\r\n        else if (typeof inputDate === \"string\") {\r\n            switch (self.config.mode) {\r\n                case \"single\":\r\n                    dates = [self.parseDate(inputDate, format)];\r\n                    break;\r\n                case \"multiple\":\r\n                    dates = inputDate\r\n                        .split(\"; \")\r\n                        .map(function (date) { return self.parseDate(date, format); });\r\n                    break;\r\n                case \"range\":\r\n                    dates = inputDate\r\n                        .split(self.l10n.rangeSeparator)\r\n                        .map(function (date) { return self.parseDate(date, format); });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        self.selectedDates = dates.filter(function (d) { return d instanceof Date && isEnabled(d, false); });\r\n        self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\r\n    }\r\n    function setDate(date, triggerChange, format) {\r\n        if (triggerChange === void 0) { triggerChange = false; }\r\n        if (format === void 0) { format = undefined; }\r\n        if (date !== 0 && !date)\r\n            return self.clear(triggerChange);\r\n        setSelectedDate(date, format);\r\n        self.showTimeInput = self.selectedDates.length > 0;\r\n        self.latestSelectedDateObj = self.selectedDates[0];\r\n        self.redraw();\r\n        jumpToDate();\r\n        setHoursFromDate();\r\n        updateValue(triggerChange);\r\n        if (triggerChange)\r\n            triggerEvent(\"onChange\");\r\n    }\r\n    function parseDateRules(arr) {\r\n        return arr\r\n            .map(function (rule) {\r\n            if (typeof rule === \"string\" ||\r\n                typeof rule === \"number\" ||\r\n                rule instanceof Date) {\r\n                return self.parseDate(rule, undefined, true);\r\n            }\r\n            else if (rule &&\r\n                typeof rule === \"object\" &&\r\n                rule.from &&\r\n                rule.to)\r\n                return {\r\n                    from: self.parseDate(rule.from, undefined),\r\n                    to: self.parseDate(rule.to, undefined),\r\n                };\r\n            return rule;\r\n        })\r\n            .filter(function (x) { return x; });\r\n    }\r\n    function setupDates() {\r\n        self.selectedDates = [];\r\n        self.now = new Date();\r\n        var preloadedDate = self.config.defaultDate || self.input.value;\r\n        if (preloadedDate)\r\n            setSelectedDate(preloadedDate, self.config.dateFormat);\r\n        var initialDate = self.selectedDates.length\r\n            ? self.selectedDates[0]\r\n            : self.config.minDate &&\r\n                self.config.minDate.getTime() > self.now.getTime()\r\n                ? self.config.minDate\r\n                : self.config.maxDate &&\r\n                    self.config.maxDate.getTime() < self.now.getTime()\r\n                    ? self.config.maxDate\r\n                    : self.now;\r\n        self.currentYear = initialDate.getFullYear();\r\n        self.currentMonth = initialDate.getMonth();\r\n        if (self.selectedDates.length)\r\n            self.latestSelectedDateObj = self.selectedDates[0];\r\n        self.minDateHasTime =\r\n            !!self.config.minDate &&\r\n                (self.config.minDate.getHours() > 0 ||\r\n                    self.config.minDate.getMinutes() > 0 ||\r\n                    self.config.minDate.getSeconds() > 0);\r\n        self.maxDateHasTime =\r\n            !!self.config.maxDate &&\r\n                (self.config.maxDate.getHours() > 0 ||\r\n                    self.config.maxDate.getMinutes() > 0 ||\r\n                    self.config.maxDate.getSeconds() > 0);\r\n        Object.defineProperty(self, \"showTimeInput\", {\r\n            get: function () { return self._showTimeInput; },\r\n            set: function (bool) {\r\n                self._showTimeInput = bool;\r\n                if (self.calendarContainer)\r\n                    toggleClass(self.calendarContainer, \"showTimeInput\", bool);\r\n                positionCalendar();\r\n            },\r\n        });\r\n    }\r\n    function formatDate(dateObj, frmt) {\r\n        if (self.config !== undefined && self.config.formatDate !== undefined)\r\n            return self.config.formatDate(dateObj, frmt);\r\n        return frmt\r\n            .split(\"\")\r\n            .map(function (c, i, arr) {\r\n            return formats[c] && arr[i - 1] !== \"\\\\\"\r\n                ? formats[c](dateObj, self.l10n, self.config)\r\n                : c !== \"\\\\\" ? c : \"\";\r\n        })\r\n            .join(\"\");\r\n    }\r\n    function parseDate(date, givenFormat, timeless) {\r\n        if (date !== 0 && !date)\r\n            return undefined;\r\n        var parsedDate;\r\n        var date_orig = date;\r\n        if (date instanceof Date)\r\n            parsedDate = new Date(date.getTime());\r\n        else if (typeof date !== \"string\" &&\r\n            date.toFixed !== undefined)\r\n            parsedDate = new Date(date);\r\n        else if (typeof date === \"string\") {\r\n            var format = givenFormat || (self.config || flatpickr.defaultConfig).dateFormat;\r\n            var datestr = String(date).trim();\r\n            if (datestr === \"today\") {\r\n                parsedDate = new Date();\r\n                timeless = true;\r\n            }\r\n            else if (/Z$/.test(datestr) ||\r\n                /GMT$/.test(datestr))\r\n                parsedDate = new Date(date);\r\n            else if (self.config && self.config.parseDate)\r\n                parsedDate = self.config.parseDate(date, format);\r\n            else {\r\n                parsedDate =\r\n                    !self.config || !self.config.noCalendar\r\n                        ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\r\n                        : new Date(new Date().setHours(0, 0, 0, 0));\r\n                var matched = void 0, ops = [];\r\n                for (var i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\r\n                    var token = format[i];\r\n                    var isBackSlash = token === \"\\\\\";\r\n                    var escaped = format[i - 1] === \"\\\\\" || isBackSlash;\r\n                    if (tokenRegex[token] && !escaped) {\r\n                        regexStr += tokenRegex[token];\r\n                        var match = new RegExp(regexStr).exec(date);\r\n                        if (match && (matched = true)) {\r\n                            ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\r\n                                fn: revFormat[token],\r\n                                val: match[++matchIndex],\r\n                            });\r\n                        }\r\n                    }\r\n                    else if (!isBackSlash)\r\n                        regexStr += \".\";\r\n                    ops.forEach(function (_a) {\r\n                        var fn = _a.fn, val = _a.val;\r\n                        return (parsedDate =\r\n                            fn(parsedDate, val, self.l10n) || parsedDate);\r\n                    });\r\n                }\r\n                parsedDate = matched ? parsedDate : undefined;\r\n            }\r\n        }\r\n        if (!(parsedDate instanceof Date)) {\r\n            console.warn(\"flatpickr: invalid date \" + date_orig);\r\n            console.info(self.element);\r\n            return undefined;\r\n        }\r\n        if (timeless === true)\r\n            parsedDate.setHours(0, 0, 0, 0);\r\n        return parsedDate;\r\n    }\r\n    function setupInputs() {\r\n        self.input = self.config.wrap\r\n            ? element.querySelector(\"[data-input]\")\r\n            : element;\r\n        if (!self.input) {\r\n            console.warn(\"Error: invalid input element specified\", self.input);\r\n            return;\r\n        }\r\n        self.input._type = self.input.type;\r\n        self.input.type = \"text\";\r\n        self.input.classList.add(\"flatpickr-input\");\r\n        self._input = self.input;\r\n        if (self.config.altInput) {\r\n            self.altInput = createElement(self.input.nodeName, self.input.className + \" \" + self.config.altInputClass);\r\n            self._input = self.altInput;\r\n            self.altInput.placeholder = self.input.placeholder;\r\n            self.altInput.disabled = self.input.disabled;\r\n            self.altInput.required = self.input.required;\r\n            self.altInput.type = \"text\";\r\n            self.input.type = \"hidden\";\r\n            if (!self.config.static && self.input.parentNode)\r\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\r\n        }\r\n        if (!self.config.allowInput)\r\n            self._input.setAttribute(\"readonly\", \"readonly\");\r\n        self._positionElement = self.config.positionElement || self._input;\r\n    }\r\n    function setupMobile() {\r\n        var inputType = self.config.enableTime\r\n            ? self.config.noCalendar ? \"time\" : \"datetime-local\"\r\n            : \"date\";\r\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\r\n        self.mobileInput.step = self.input.getAttribute(\"step\") || \"any\";\r\n        self.mobileInput.tabIndex = 1;\r\n        self.mobileInput.type = inputType;\r\n        self.mobileInput.disabled = self.input.disabled;\r\n        self.mobileInput.placeholder = self.input.placeholder;\r\n        self.mobileFormatStr =\r\n            inputType === \"datetime-local\"\r\n                ? \"Y-m-d\\\\TH:i:S\"\r\n                : inputType === \"date\" ? \"Y-m-d\" : \"H:i:S\";\r\n        if (self.selectedDates.length) {\r\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\r\n        }\r\n        if (self.config.minDate)\r\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\r\n        if (self.config.maxDate)\r\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\r\n        self.input.type = \"hidden\";\r\n        if (self.altInput !== undefined)\r\n            self.altInput.type = \"hidden\";\r\n        try {\r\n            if (self.input.parentNode)\r\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\r\n        }\r\n        catch (_a) { }\r\n        self.mobileInput.addEventListener(\"change\", function (e) {\r\n            self.setDate(e.target.value, false, self.mobileFormatStr);\r\n            triggerEvent(\"onChange\");\r\n            triggerEvent(\"onClose\");\r\n        });\r\n    }\r\n    function toggle() {\r\n        if (self.isOpen)\r\n            return self.close();\r\n        self.open();\r\n    }\r\n    function triggerEvent(event, data) {\r\n        var hooks = self.config[event];\r\n        if (hooks !== undefined && hooks.length > 0) {\r\n            for (var i = 0; hooks[i] && i < hooks.length; i++)\r\n                hooks[i](self.selectedDates, self.input.value, self, data);\r\n        }\r\n        if (event === \"onChange\") {\r\n            self.input.dispatchEvent(createEvent(\"change\"));\r\n            self.input.dispatchEvent(createEvent(\"input\"));\r\n        }\r\n    }\r\n    function createEvent(name) {\r\n        var e = document.createEvent(\"Event\");\r\n        e.initEvent(name, true, true);\r\n        return e;\r\n    }\r\n    function isDateSelected(date) {\r\n        for (var i = 0; i < self.selectedDates.length; i++) {\r\n            if (compareDates(self.selectedDates[i], date) === 0)\r\n                return \"\" + i;\r\n        }\r\n        return false;\r\n    }\r\n    function isDateInRange(date) {\r\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\r\n            return false;\r\n        return (compareDates(date, self.selectedDates[0]) >= 0 &&\r\n            compareDates(date, self.selectedDates[1]) <= 0);\r\n    }\r\n    function updateNavigationCurrentMonth() {\r\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\r\n            return;\r\n        self.currentMonthElement.textContent =\r\n            monthToStr(self.currentMonth, self.config.shorthandCurrentMonth, self.l10n) + \" \";\r\n        self.currentYearElement.value = self.currentYear.toString();\r\n        self._hidePrevMonthArrow =\r\n            self.config.minDate !== undefined &&\r\n                (self.currentYear === self.config.minDate.getFullYear()\r\n                    ? self.currentMonth <= self.config.minDate.getMonth()\r\n                    : self.currentYear < self.config.minDate.getFullYear());\r\n        self._hideNextMonthArrow =\r\n            self.config.maxDate !== undefined &&\r\n                (self.currentYear === self.config.maxDate.getFullYear()\r\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\r\n                    : self.currentYear > self.config.maxDate.getFullYear());\r\n    }\r\n    function updateValue(triggerChange) {\r\n        if (triggerChange === void 0) { triggerChange = true; }\r\n        if (!self.selectedDates.length)\r\n            return self.clear(triggerChange);\r\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\r\n            self.mobileInput.value =\r\n                self.latestSelectedDateObj !== undefined\r\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\r\n                    : \"\";\r\n        }\r\n        var joinChar = self.config.mode !== \"range\"\r\n            ? self.config.conjunction\r\n            : self.l10n.rangeSeparator;\r\n        self.input.value = self.selectedDates\r\n            .map(function (dObj) { return self.formatDate(dObj, self.config.dateFormat); })\r\n            .join(joinChar);\r\n        if (self.altInput !== undefined) {\r\n            self.altInput.value = self.selectedDates\r\n                .map(function (dObj) { return self.formatDate(dObj, self.config.altFormat); })\r\n                .join(joinChar);\r\n        }\r\n        if (triggerChange !== false)\r\n            triggerEvent(\"onValueUpdate\");\r\n    }\r\n    function onMonthNavScroll(e) {\r\n        e.preventDefault();\r\n        var isYear = self.currentYearElement.parentNode &&\r\n            self.currentYearElement.parentNode.contains(e.target);\r\n        if (e.target === self.currentMonthElement || isYear) {\r\n            var delta = mouseDelta(e);\r\n            if (isYear) {\r\n                changeYear(self.currentYear + delta);\r\n                e.target.value = self.currentYear.toString();\r\n            }\r\n            else\r\n                self.changeMonth(delta, true, false);\r\n        }\r\n    }\r\n    function onMonthNavClick(e) {\r\n        var isPrevMonth = self.prevMonthNav.contains(e.target);\r\n        var isNextMonth = self.nextMonthNav.contains(e.target);\r\n        if (isPrevMonth || isNextMonth)\r\n            changeMonth(isPrevMonth ? -1 : 1);\r\n        else if (e.target === self.currentYearElement) {\r\n            e.preventDefault();\r\n            self.currentYearElement.select();\r\n        }\r\n        else if (e.target.className === \"arrowUp\")\r\n            self.changeYear(self.currentYear + 1);\r\n        else if (e.target.className === \"arrowDown\")\r\n            self.changeYear(self.currentYear - 1);\r\n    }\r\n    function timeWrapper(e) {\r\n        e.preventDefault();\r\n        var isKeyDown = e.type === \"keydown\", input = e.target;\r\n        if (self.amPM !== undefined && e.target === self.amPM)\r\n            self.amPM.textContent =\r\n                self.l10n.amPM[self.amPM.textContent === \"AM\" ? 1 : 0];\r\n        var min = Number(input.min), max = Number(input.max), step = Number(input.step), curValue = parseInt(input.value, 10), delta = e.delta ||\r\n            (isKeyDown\r\n                ? e.which === 38 ? 1 : -1\r\n                : Math.max(-1, Math.min(1, e.wheelDelta || -e.deltaY)) || 0);\r\n        var newValue = curValue + step * delta;\r\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\r\n            var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\r\n            if (newValue < min) {\r\n                newValue =\r\n                    max +\r\n                        newValue +\r\n                        int(!isHourElem) +\r\n                        (int(isHourElem) && int(!self.amPM));\r\n                if (isMinuteElem)\r\n                    incrementNumInput(undefined, -1, self.hourElement);\r\n            }\r\n            else if (newValue > max) {\r\n                newValue =\r\n                    input === self.hourElement ? newValue - max - int(!self.amPM) : min;\r\n                if (isMinuteElem)\r\n                    incrementNumInput(undefined, 1, self.hourElement);\r\n            }\r\n            if (self.amPM &&\r\n                isHourElem &&\r\n                (step === 1\r\n                    ? newValue + curValue === 23\r\n                    : Math.abs(newValue - curValue) > step))\r\n                self.amPM.textContent = self.amPM.textContent === \"PM\" ? \"AM\" : \"PM\";\r\n            input.value = pad(newValue);\r\n        }\r\n    }\r\n    init();\r\n    return self;\r\n}\r\nfunction _flatpickr(nodeList, config) {\r\n    var nodes = Array.prototype.slice.call(nodeList);\r\n    var instances = [];\r\n    for (var i = 0; i < nodes.length; i++) {\r\n        var node = nodes[i];\r\n        try {\r\n            if (node.getAttribute(\"data-fp-omit\") !== null)\r\n                continue;\r\n            if (node._flatpickr !== undefined) {\r\n                node._flatpickr.destroy();\r\n                node._flatpickr = undefined;\r\n            }\r\n            node._flatpickr = FlatpickrInstance(node, config || {});\r\n            instances.push(node._flatpickr);\r\n        }\r\n        catch (e) {\r\n            console.warn(e, e.stack);\r\n        }\r\n    }\r\n    return instances.length === 1 ? instances[0] : instances;\r\n}\r\nif (typeof HTMLElement !== \"undefined\") {\r\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\r\n        return _flatpickr(this, config);\r\n    };\r\n    HTMLElement.prototype.flatpickr = function (config) {\r\n        return _flatpickr([this], config);\r\n    };\r\n}\r\nvar flatpickr;\r\nflatpickr = function (selector, config) {\r\n    if (selector instanceof NodeList)\r\n        return _flatpickr(selector, config);\r\n    else if (typeof selector === \"string\")\r\n        return _flatpickr(window.document.querySelectorAll(selector), config);\r\n    return _flatpickr([selector], config);\r\n};\r\nwindow.flatpickr = flatpickr;\r\nflatpickr.defaultConfig = defaults;\r\nflatpickr.l10ns = {\r\n    en: __assign({}, english),\r\n    default: __assign({}, english),\r\n};\r\nflatpickr.localize = function (l10n) {\r\n    flatpickr.l10ns.default = __assign({}, flatpickr.l10ns.default, l10n);\r\n};\r\nflatpickr.setDefaults = function (config) {\r\n    flatpickr.defaultConfig = __assign({}, flatpickr.defaultConfig, config);\r\n};\r\nif (typeof jQuery !== \"undefined\") {\r\n    jQuery.fn.flatpickr = function (config) {\r\n        return _flatpickr(this, config);\r\n    };\r\n}\r\nDate.prototype.fp_incr = function (days) {\r\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\r\n};\r\nvar flatpickr$1 = flatpickr;\n\nreturn flatpickr$1;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/flatpickr/dist/flatpickr.js\n// module id = 3\n// module chunks = 0","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nexports.__esModule = true;\nvar defaultConfig = {\n    confirmIcon: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='17' height='17' viewBox='0 0 17 17'> <g> </g> <path d='M15.418 1.774l-8.833 13.485-4.918-4.386 0.666-0.746 4.051 3.614 8.198-12.515 0.836 0.548z' fill='#000000' /> </svg>\",\n    confirmText: \"OK \",\n    showAlways: false,\n    theme: \"light\"\n};\nfunction confirmDatePlugin(pluginConfig) {\n    var config = __assign({}, defaultConfig, pluginConfig);\n    var confirmContainer;\n    return function (fp) {\n        var hooks = __assign({ onKeyDown: function (_, __, ___, e) {\n                if (fp.config.enableTime && e.key === \"Tab\" && e.target === fp.amPM) {\n                    e.preventDefault();\n                    confirmContainer.focus();\n                }\n                else if (e.key === \"Enter\" && e.target === confirmContainer)\n                    fp.close();\n            },\n            onReady: function () {\n                if (fp.calendarContainer === undefined)\n                    return;\n                confirmContainer = fp._createElement(\"div\", \"flatpickr-confirm \" + (config.showAlways\n                    ? \"visible\"\n                    : \"\") + \" \" + config.theme + \"Theme\", config.confirmText);\n                confirmContainer.tabIndex = -1;\n                confirmContainer.innerHTML += config.confirmIcon;\n                confirmContainer.addEventListener(\"click\", fp.close);\n                fp.calendarContainer.appendChild(confirmContainer);\n            } }, !config.showAlways\n            ? {\n                onChange: function (_, dateStr) {\n                    var showCondition = fp.config.enableTime || fp.config.mode === \"multiple\";\n                    if (dateStr && !fp.config.inline && showCondition)\n                        return confirmContainer.classList.add(\"visible\");\n                    confirmContainer.classList.remove(\"visible\");\n                }\n            }\n            : {});\n        return hooks;\n    };\n}\nexports[\"default\"] = confirmDatePlugin;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/flatpickr/dist/plugins/confirmDate/confirmDate.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}